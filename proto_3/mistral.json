[
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want hotels in Miami, so: country = 'US' AND city = 'Miami'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'US' AND city = 'Miami';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Hotel in Copenhagen, so: city = 'Copenhagen'. Needs to have a restaurant, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Copenhagen' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Spain and Portugal, so: (country IN ('ES', 'PT')). Needs to have amenities for both children and adults, so: (pool = 1 OR child_pool = 1 OR playground = 1 OR kids\\_friendly\\_buffet = 1 OR adults\\_only = 0). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('ES', 'PT') AND (pool = 1 OR child_pool = 1 OR playground = 1 OR kids\\_friendly\\_buffet = 1 OR adults\\_only = 0);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Spain, so: country = 'ES'. Kids friendly, so: pet\\_friendly = 'pets allowed on request' OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1 OR playground = 1. At least 4 stars, so: stars >= 4. Good reviews, so: review\\_count >= 20 AND rating >= 8. Therefore, the SQL statement answer is: SELECT name, rating, review\\_count FROM hotels WHERE country = 'ES' AND (pet\\_friendly = 'pets allowed on request' OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1 OR playground = 1) AND stars >= 4 AND review\\_count >= 20 AND rating >= 8 LIMIT 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to work out, so: fitness\\_center = 1. Looking for a luxurious hotel, so: stars >= 4. Countries they want to travel to: Italy, Spain, Greece, France. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE (country = 'IT' OR country = 'ES' OR country = 'GR' OR country = 'FR') AND stars >= 4 AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in the USA, so: country = 'US'. With at least 4 stars, so: stars >= 4. Popular, we assume it means high review count, so: review\\_count >= 1000. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'US' AND stars >= 4 AND review\\_count >= 1000;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Paris, so: country = 'FR' AND city = 'Paris'. With air conditioning, so: aircondition = 1. Has a bar, so: bar = 1. Three stars, so: stars = 3. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city = 'Paris' AND aircondition = 1 AND bar = 1 AND stars = 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They are an active family, so: fitness\\_center = 1 OR pool = 1 OR golf = 1 OR hiking = 1 OR biking = 1 OR water\\_sports = 1. They are open to most cities in Spain, so no city restriction. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND (fitness\\_center = 1 OR pool = 1 OR golf = 1 OR hiking = 1 OR biking = 1 OR water\\_sports = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Turkey, so: country = 'TR'. With a pool, so: pool = 1. Needs to have a water slide, so: description LIKE '%water slide%'. Needs to have a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TR' AND pool = 1 AND description LIKE '%water slide%' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Five star hotels, so: stars = 5. In Amsterdam, so: country = 'NL' AND city = 'Amsterdam'. High ratings, so: rating >= 8 AND review\\_count >= 20. Spa facilities, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE stars = 5 AND country = 'NL' AND city = 'Amsterdam' AND rating >= 8 AND review\\_count >= 20 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to travel to Norway or Sweden, so: country IN ('NO', 'SE'). They are a family of 2 adults and a small child, so no specific requirements. They prefer a hotel with a restaurant, so: restaurant = 1. They need to be able to stay connected to their family through Facetime, so wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('NO', 'SE') AND restaurant = 1 AND wifi = 'free';",
    "We cannot provide a SQL query for this question as it is not specific enough. The question asks for suggestions for traveling solo to a place outside Europe, but it does not provide any criteria for the selection such as country, budget, interests, or preferences. Therefore, a SQL query is not applicable for this question.",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Suggest hotels on Malta, so: country = 'MT'. Allows one to keep in shape, so: fitness\\_center = 1 OR pool = 1 OR gym = 1. Provides the possibility to meet people at the hotel in the evening for socializing, so: bar = 1 OR restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MT' AND (fitness\\_center = 1 OR pool = 1 OR gym = 1) AND (bar = 1 OR restaurant = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Woman with two kids, so: NOT gender IS NOT NULL. Interested in hotels in Crete, so: country = 'GR' AND city IN ('Crete', 'Chania', 'Heraklion', 'Agios Nikolaos', 'Rethymno', 'Hania', 'Ayia Napa'). With a bar, so: bar = 1. Swimming in the ocean, so: beach_access = 'beach access'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE NOT gender IS NOT NULL AND country = 'GR' AND city IN ('Crete', 'Chania', 'Heraklion', 'Agios Nikolaos', 'Rethymno', 'Hania', 'Ayia Napa') AND bar = 1 AND beach_access = 'beach access';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Interested in hotels in Crete, so: country = 'GR' AND city IN ('Crete', 'Chania', 'Heraklion', 'Agios Nikolaos', 'Rethymno', 'Hania', 'Ayios Nikolaos', 'Iraklion', 'Malia', 'Hersonissos'). With a bar, so: bar = 1. Swimming in the ocean, so: beach_access = 'beach access'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND city IN ('Crete', 'Chania', 'Heraklion', 'Agios Nikolaos', 'Rethymno', 'Hania', 'Ayios Nikolaos', 'Iraklion', 'Malia', 'Hersonissos') AND bar = 1 AND beach_access = 'beach access';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Embarking on a trip around Europe, so no specific country mentioned. Needs suggestions on 3 different hotels, so: SELECT DISTINCT country FROM hotels WHERE pool = 1 OR beach_access IS NOT NULL LIMIT 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Five hotels in Eastern Europe, so: (country IN ('PL', 'HU', 'LT', 'CZ', 'SK', 'RO', 'HR', 'CZ', 'SI', 'UA', 'BG', 'SRB', 'BH', 'MT', 'AL', 'ME', 'MK', 'XK', 'MD', 'EE', 'LV', 'LT', 'BY', 'LT', 'LV', 'EST', 'LV', 'LT')) AND. Ocean view, so: ocean\\_view = 1. Pool, so: pool = 1. Spa facilities, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('PL', 'HU', 'LT', 'CZ', 'SK', 'RO', 'HR', 'CZ', 'SI', 'UA', 'BG', 'SRB', 'BH', 'MT', 'AL', 'ME', 'MK', 'XK', 'MD', 'EE', 'LV', 'LT', 'BY', 'LT', 'LV', 'EST', 'LV', 'LT') AND ocean\\_view = 1 AND pool = 1 AND spa = 1 LIMIT 5;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Traveling on a budget, so: stars <= 3. Looking for hotels in Berlin, so: country = 'DE' AND city = 'Berlin'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DE' AND city = 'Berlin' AND stars <= 3 ORDER BY price ASC LIMIT 10;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Going on a trip around Asia, so: country IN ('TH', 'ID', 'SG', 'MY', 'PH', 'VN', 'CN', 'JP', 'KR', 'BN', 'MM', 'LA', 'Cambodia', 'Maldives', 'Indonesia', 'Vietnam', 'India', 'Pakistan', 'Bangladesh', 'SriLanka', 'Mongolia', 'Nepal', 'Bhutan', 'Malaysia', 'Brunei', 'Cambodia', 'Cambodia', 'Laos', 'Thailand', 'Vietnam', 'China', 'Japan', 'South-Korea', 'Taiwan', 'Maldives', 'Indonesia', 'Philippines', 'Vietnam', 'India', 'SriLanka', 'Malaysia', 'Bangladesh', 'Pakistan', 'Bhutan', 'Nepal', 'Mongolia'). Needs a restaurant, so: restaurant = 1. Needs to suggest 3 different hotels, so: LIMIT 3. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('TH', 'ID', 'SG', 'MY', 'PH', 'VN', 'CN', 'JP', 'KR', 'BN', 'MM', 'LA', 'Cambodia', 'Maldives', 'Indonesia', 'Vietnam', 'India', 'Pakistan', 'Bangladesh', 'SriLanka', 'Mongolia', 'Nepal', 'Bhutan', 'Malaysia', 'Brunei', 'Cambodia', 'Cambodia', 'Laos', 'Thailand', 'Vietnam', 'China', 'Japan', 'South-Korea', 'Taiwan', 'Maldives', 'Indonesia', 'Philippines', 'Vietnam', 'India', 'SriLanka', 'Malaysia', 'Bangladesh', 'Pakistan', 'Bhutan', 'Nepal', 'Mongolia') AND restaurant = 1 LIMIT 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Danish man living in Copenhagen, so: country = 'DK' AND city = 'Copenhagen'. Likes being online, so: wifi = 'free'. Interested in 3 different 2 star hotels in Barcelona, so: country = 'ES' AND city = 'Barcelona' AND stars = 2. Therefore, the SQL statement answer is: SELECT name, address, city, country, rating, review_count FROM hotels WHERE (country = 'DK' AND city = 'Copenhagen') OR (country = 'ES' AND city = 'Barcelona' AND stars = 2) LIMIT 3;",
    "To provide a random hotel, we can use the SQL RAND() function. However, we cannot provide a specific hotel without additional filtering, as the schema does not include a column for random selection. Therefore, the SQL statement answer is: SELECT \\* FROM hotels ORDER BY RAND() LIMIT 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Name is Myriel, so no effect on query. Age is 73, so no effect on query. Lived in Copenhagen, now moving to Roskilde, so: country = 'DK' and city = 'Roskilde'. Traveling to Spain, so: country = 'ES'. No longer needs a pool, so: pool = 0. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city IS NULL OR city != 'Roskilde' AND pool = 0;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Mexico, so: country = 'MX'. Needs wellness and entertainment, so: spa = 1 AND bar = 1. Affordable, but nice, so: stars >= 3 AND rating >= 7. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND spa = 1 AND bar = 1 AND stars >= 3 AND rating >= 7;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Going to the Danish capital, so: country = 'DK' and city = 'Copenhagen'. Going to London, so: hotel\\_url LIKE '%london%'. Four star hotels, so: stars = 4. Needs a bar, so: bar = 1. Needs free wifi, so: wifi = 'free'. Needs airport shuttle, so: airport_shuttle = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DK' AND city = 'Copenhagen' AND hotel\\_url LIKE '%london%' AND stars = 4 AND bar = 1 AND wifi = 'free' AND airport_shuttle = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. You want to enjoy the nice weather, but the question does not specify a country or location. Therefore, we cannot use the country column. Your dog likes to run on the beach, so: beach\\_access IN ('private beach', 'beach access'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE beach\\_access IN ('private beach', 'beach access');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They are traveling from Copenhagen to Rome, so: country IN ('DK', 'IT'). They are driving in a Tesla, so: ev_charging_station = 1. They are a family of 3 with 1 child, so: adults = 3 AND kids = 1. They want a hotel, so: SELECT \\*. In Rome, so: city = 'Rome'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE (country = 'DK' OR country = 'IT') AND ev_charging_station = 1 AND (adults = 3 AND kids = 1) AND city = 'Rome';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Going to Rio de Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro'. Needs to be centrally located, so: no specific column. Offers convenience for all, no specific requirement. A restaurant, so: restaurant = 1. Has a casino, so: casino = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND restaurant = 1 AND casino = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Experiencing new cultures, so: countries = ['IN', 'ID', 'CN', 'JP', 'KR', 'TH', 'VN', 'MY', 'SG']. Likes to explore the area, but when at the hotel, wants to relax and wind down, so: no specific requirement. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('IN', 'ID', 'CN', 'JP', 'KR', 'TH', 'VN', 'MY', 'SG');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want hotels in Rome, so: country = 'IT' AND city = 'Rome'. They want a place to cool off, which can be interpreted as a pool or beach access. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND (pool = 1 OR beach_access IN ('private beach', 'beach access'));",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Personally likes to golf, so: golf = 1. Needs free wifi, so: wifi = 'free'. Needs a kitchen, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE golf = 1 AND wifi = 'free' AND kitchen = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Paris, so: country = 'FR' AND city = 'Paris'. With free WiFi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city = 'Paris' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Driving to Munich, so: country = 'DE' AND city = 'Munchen'. Has a Polestar, so: no specific requirement. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Offers a spot for the car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DE' AND city = 'Munchen' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wishes to book a vacation stay in Rome, so: country = 'IT' AND city = 'Rome'. Kids can have fun, so: playground = 1 OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1. No need to bring a bed for toddlers, so: cribs = 1. Place to relax, so: spa = 1 OR fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND (playground = 1 OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1) AND cribs = 1 AND (spa = 1 OR fitness\\_center = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Mannheim, so: city = 'Mannheim'. Offers free WiFi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Mannheim' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly hotel, so: pet\\_friendly = 'pets allowed on request'. In Miami, so: city = 'Miami'. With a gym, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Miami' AND pet\\_friendly = 'pets allowed on request' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cosy getaway spot in Dresden, so: country = 'DE' AND city = 'Dresden'. Preferably without families, so: kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0. Maybe even with a romantic dinner option on site, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DE' AND city = 'Dresden' AND kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In Rome, so: country = 'IT' AND city = 'Rome'. Needs to work from computer, so: wifi = 'free'. Needs a place to wind down, so: bar = 1 OR spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND wifi = 'free' AND (bar = 1 OR spa = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly hotel in Boston, so: country = 'US' AND city = 'Boston' AND pet\\_friendly = 'pets allowed on request'. With an ocean view, so: ocean\\_view = 1. Has a place to park a car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'US' AND city = 'Boston' AND pet\\_friendly = 'pets allowed on request' AND ocean\\_view = 1 AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a summer holiday to France, so: country = 'FR'. Need hotels for strollers, so: unit_wheelchair_accessible = 1 OR increased_accessibility = 1. Close to the beach, so: beach_access IN ('private beach', 'beach access'). Needs options for child to sleep comfortably, so: cribs = 1 OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1. Needs food for the child, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND (unit_wheelchair_accessible = 1 OR increased_accessibility = 1) AND beach_access IN ('private beach', 'beach access') AND (cribs = 1 OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1) AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Elderly woman, so no specific requirement. Does not like pets, so: pet\\_friendly IS NULL OR pet\\_friendly = 'no pets'. In Madrid, so: country = 'ES' AND city = 'Madrid'. Needs a nice place to enjoy meals, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'ES' AND city = 'Madrid' AND pet\\_friendly IS NULL OR pet\\_friendly = 'no pets' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a getaway in Paris, so: country = 'FR' AND city = 'Paris'. Loves fine dining, so: restaurant = 1. Good quality hotels, so: stars >= 4. Convenience of airport transport, so: airport_shuttle IN ('possible', 'free'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city = 'Paris' AND restaurant = 1 AND stars >= 4 AND airport_shuttle IN ('possible', 'free');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Nice, so: city = 'Nice'. Needs wireless network, so: wifi = 'free'. Needs on-site parking, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Nice' AND wifi = 'free' AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a 4-star hotel, so: stars = 4. Bringing a dog, so: pet\\_friendly = 'pets allowed on request'. Has a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE stars = 4 AND pet\\_friendly = 'pets allowed on request' AND fitness\\_center = 1 AND country = 'DE';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Family stay in Tokyo, so: country = 'JP' AND city = 'Tokyo'. Essential to have facilities for kids, so: kids\\_friendly\\_buffet = 1 OR child\\_pool = 1 OR playground = 1. Easy access for a person with a disability, so: increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'JP' AND city = 'Tokyo' AND (kids\\_friendly\\_buffet = 1 OR child\\_pool = 1 OR playground = 1) AND (increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Asking for hotels in Basel, so: city = 'Basel'. Five stars, so: stars = 5. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Basel' AND stars = 5;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for quality accommodations in Salzburg, so: city = 'Salzburg'. Offers airport shuttle service, so: airport_shuttle IN ('free', 'possible'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Salzburg' AND airport_shuttle IN ('free', 'possible');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to travel to Spain, so: country = 'ES'. Family-friendly, so: kids\\_friendly\\_buffet = 1 AND playground = 1 AND child\\_pool = 1. Needs to provide the possibility for Facetime, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'ES' AND kids\\_friendly\\_buffet = 1 AND playground = 1 AND child\\_pool = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to travel to Miami, so: country = 'US' AND city = 'Miami'. They want to gamble, so: casino = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'US' AND city = 'Miami' AND casino = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Austria, so: country = 'AT'. Offers a casino, so: casino = 1. A place to enjoy a beer, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'AT' AND casino = 1 AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a getaway to Ibiza-Island, so: country = 'ES' AND city = 'Ibiza-Island'. Catering to small children, so: kids\\_friendly\\_buffet = 1 AND child\\_pool = 1. A place for relaxation, so: spa = 1. An aquapark, so: water\\_park = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Ibiza-Island' AND kids\\_friendly\\_buffet = 1 AND child\\_pool = 1 AND spa = 1 AND water\\_park = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs to be in Berlin, so: country = 'DE' AND city = 'Berlin'. Needs a gym, so: fitness\\_center = 1. Needs free WiFi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'DE' AND city = 'Berlin' AND fitness\\_center = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Not looking for pet-friendly accommodations, so: pet\\_friendly IS NOT 'pets allowed on request'. Needs to have a kitchen, so: kitchen = 1. Only for people 18+, so: adults\\_only = 1. In Vienna, so: country = 'AT' AND city = 'Vienna'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'AT' AND city = 'Vienna' AND kitchen = 1 AND adults\\_only = 1 AND pet\\_friendly IS NOT 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Rome, so: country = 'IT' AND city = 'Rome'. Cozy place for couples retreat, no specific column for that, but we can assume that a lower number of rooms or a smaller hotel might fit the description. So: (review\\_count <= 50 OR id IN (SELECT id FROM hotels WHERE id IN (SELECT id FROM hotels GROUP BY id HAVING COUNT(*) < 10)). Needs a place for dinner, so: restaurant = 1. Needs the possibility of relaxation, so: spa = 1 OR pool = 1 OR increased\\_accessibility = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND (review\\_count <= 50 OR id IN (SELECT id FROM hotels WHERE id IN (SELECT id FROM hotels GROUP BY id HAVING COUNT(*) < 10))) AND restaurant = 1 AND (spa = 1 OR pool = 1 OR increased\\_accessibility = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Tokyo, so: country = 'JP' AND city = 'Tokyo'. With free wifi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'JP' AND city = 'Tokyo' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a stay in Edinburgh, so: city = 'Edinburgh'. Needs a place to unwind at night, so: bar = 1 OR spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Edinburgh' AND (bar = 1 OR spa = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in the Danish capital, so: country = 'DK' AND city = 'Copenhagen'. Loves to bring a four-legged friend, so: pet\\_friendly = 'pets allowed on request'. Needs a place to enjoy some lovely food, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'DK' AND city = 'Copenhagen' AND pet\\_friendly = 'pets allowed on request' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a trip to Greece, so: country = 'GR'. Including wellness, so: spa = 1. Want a beautiful view from the room, so: ocean\\_view = 1 OR city\\_view = 1. Quiet retreat, so: adults\\_only = 1 OR kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND (spa = 1 AND (ocean\\_view = 1 OR city\\_view = 1)) AND (adults\\_only = 1 OR kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Prague, so: country = 'CZ' AND city = 'Prague'. Offers free WiFi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'CZ' AND city = 'Prague' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Czech-Republic, so: country = 'CZ'. Needs to have a kitchen, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'CZ' AND kitchen = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Recommend a stay in Krakow, so: country = 'PL' AND city = 'Krakow'. Good standard, so: stars >= 3. Easy accessible, but the query does not provide enough information to determine this from the schema. Doesn't mind a furry friend joining, so: pet\\_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'PL' AND city = 'Krakow' AND stars >= 3 AND pet\\_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Warsaw, so: country = 'PL' AND city = 'Warsaw'. With at least four stars, so: stars >= 4. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'PL' AND city = 'Warsaw' AND stars >= 4;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Driving to Denmark, so: country = 'DK'. Needs a hotel with good reviews, so: rating >= 8 AND review\\_count >= 20. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'DK' AND rating >= 8 AND review\\_count >= 20;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In Budapest, so: country = 'HU' AND city = 'Budapest'. Offers wellness, so: spa = 1. Luxurious, so: stars >= 4. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND spa = 1 AND stars >= 4;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Hamborg, so: city = 'Hamburg'. Needs to provide the possibility to stay connected, so: wifi = 'free'. Decent, but no clear definition of what that means, so we assume it's a combination of good reviews and a decent price. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Hamburg' AND wifi = 'free' AND (rating >= 7 AND review_count >= 20) OR (stars >= 3 AND price <= 100);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly accommodation in Prague, so: country = 'CZ' AND pet\\_friendly = 'pets allowed on request'. Needs to offer a place to park a car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'CZ' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a family trip to the capital of Hungary, so: country = 'HU' AND city = 'Budapest'. Needs a place where children can have fun, so: kids\\_friendly\\_buffet = 1 OR playground = 1 OR child\\_pool = 1 OR water\\_park = 1. Loves hotels with high quality, so: rating >= 8 AND review\\_count >= 50. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND (kids\\_friendly\\_buffet = 1 OR playground = 1 OR child\\_pool = 1 OR water\\_park = 1) AND rating >= 8 AND review\\_count >= 50;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Family oriented, so: kids\\_friendly\\_buffet = 1 OR playground = 1 OR child\\_pool = 1 OR kids\\_friendly = 1. Equipped for summer heat, so: aircondition = 1. Allows pets, so: pet\\_friendly = 'pets allowed on request'. Countries are Portugal and Spain, so: country IN ('PT', 'ES'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('PT', 'ES') AND (kids\\_friendly\\_buffet = 1 OR playground = 1 OR child\\_pool = 1 OR kids\\_friendly = 1) AND aircondition = 1 AND pet\\_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. The capital of Great Britain is London, so: country = 'GB' AND city = 'London'. Needs to have free wifi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GB' AND city = 'London' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Rome, so: country = 'IT' AND city = 'Rome'. Needs a gym, so: fitness\\_center = 1. Needs a place to park, so: parking IN ('no', 'free', 'surcharge'). Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'IT' AND city = 'Rome' AND fitness\\_center = 1 AND parking IN ('no', 'free', 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Spain, so: country = 'ES'. Needs at least four stars, so: stars >= 4. Has a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND stars >= 4 AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a lodging option in Barcelona, so: country = 'ES' AND city = 'Barcelona'. Wants to relax and recharge, so: spa = 1 OR fitness_center = 1. Wants to enjoy local cuisines within the premises, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Barcelona' AND (spa = 1 OR fitness_center = 1) AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wants to keep in shape, so: fitness_center = 1 OR pool = 1 OR gym = 1. Wants to meet people in the evening for socializing, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE (fitness_center = 1 OR pool = 1 OR gym = 1) AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Ibiza, so: country = 'ES' AND city = 'Ibiza-Island'. With a bar, so: bar = 1. Five stars, so: stars = 5. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Ibiza-Island' AND bar = 1 AND stars = 5;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a beachfront hotel, so: country IN ('MX', 'BR', 'CO', 'CR', 'JP', 'TH', 'ID', 'PH', 'VN', 'MY', 'SG') AND beach\\_access IN ('beach access', 'private beach'). Provides wellness facilities, so: spa = 1 OR fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('MX', 'BR', 'CO', 'CR', 'JP', 'TH', 'ID', 'PH', 'VN', 'MY', 'SG') AND beach\\_access IN ('beach access', 'private beach') AND (spa = 1 OR fitness\\_center = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. A couples escape, no specific location mentioned, so no country or city filter. With a spot for evening cocktails, so: bar = 1. With a refreshing morning dive, so: pool = 1 OR beach_access IN ('private beach', 'beach access'). Prioritizing a sustainable stay, so: ev_charging_station = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE bar = 1 AND pool = 1 OR beach_access IN ('private beach', 'beach access') AND ev_charging_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Hotels in London, so: country = 'GB' AND city = 'London'. With airport shuttle service, so: airport\\_shuttle IS NOT NULL. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'GB' AND city = 'London' AND airport\\_shuttle IS NOT NULL;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Turkey, so: country = 'TR'. Needs a place to cool off, so: pool = 1 OR beach_access IN ('private beach', 'beach access'). Offers dining options, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TR' AND (pool = 1 OR beach_access IN ('private beach', 'beach access')) AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a tranquil retreat in France, so: country = 'FR'. Needs an in-house dining experience, so: restaurant = 1. Needs to stay connected for occasional work, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND restaurant = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Berlin, so: country = 'DE' AND city = 'Berlin'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'DE' AND city = 'Berlin' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Amsterdam, so: city = 'Amsterdam'. Offers free parking, so: parking = 'free'. Offers evening drinks, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Amsterdam' AND parking = 'free' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Searching for a retreat in Rome, so: country = 'IT' AND city = 'Rome'. Supports eco-friendly guests with a Tesla, so: ev_charging_station = 1. Desires a place to relax, so: adults\\_only = 1. Wants to read a novel, so: no specific column. Wants temperature-controlled environment, so: aircondition = 1. Wants to have morning coffee onsite, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND ev_charging_station = 1 AND adults\\_only = 1 AND aircondition = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wanting a hotel in Paris, so: country = 'FR' AND city = 'Paris'. With a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city = 'Paris' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a place to run, so: gym = 1. Needs to recharge, so: ev_charging_station = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE gym = 1 AND ev_charging_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Loves football and favorite team is Real Madrid, so: country = 'ES' AND name LIKE '%Real Madrid%'. Quarterfinals next week, so: NOT (name LIKE '%Champions League%' AND (YEAR(CURDATE()) < YEAR(CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(name, ' ', 1), ' ', -1) AS UNSIGNED) < 2023 OR MONTH(CURDATE()) < 4 OR DAY(CURDATE()) < 15)). Looking for four star hotels, so: stars = 4. Needs a restaurant and a bar, so: restaurant = 1 AND bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND name LIKE '%Real Madrid%' AND NOT (name LIKE '%Champions League%' AND (YEAR(CURDATE()) < 2023 OR MONTH(CURDATE()) < 4 OR DAY(CURDATE()) < 15)) AND stars = 4 AND restaurant = 1 AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in the US, so: country = 'US'. With at least four stars, so: stars >= 4. Has a gym, so: fitness\\_center = 1. Needs to cook own meals, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'US' AND stars >= 4 AND fitness\\_center = 1 AND kitchen = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Find hotels in the biggest city in Norway, so: country = 'NO' AND city = (SELECT city FROM cities ORDER BY population DESC LIMIT 1). With wellness, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'NO' AND city = (SELECT city FROM cities ORDER BY population DESC LIMIT 1) AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place to stay in Gothenburg, so: city = 'Gothenburg'. Offers breakfast, so: restaurant = 1. Has laundry facilities, so: washing\\_and\\_drier = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Gothenburg' AND restaurant = 1 AND washing\\_and\\_drier = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a serene retreat, so: adults\\_only = 1 OR increased\\_accessibility = 1 OR increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1. Focus on health and wellness, so: spa = 1 OR fitness\\_center = 1. Options for relaxation, so: pool = 1 OR ocean\\_view = 1. Not just buildings, so: ocean\\_view = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE (adults\\_only = 1 OR increased\\_accessibility = 1 OR increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1) AND (spa = 1 OR fitness\\_center = 1) AND pool = 1 AND ocean\\_view = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In Stockholm, so: country = 'SE' AND city = 'Stockholm'. With good reviews, so: rating >= 8 AND review\\_count >= 20. Wants to stay connected without having to pay for it, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'SE' AND city = 'Stockholm' AND rating >= 8 AND review\\_count >= 20 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs to be in Norway, Sweden or Denmark, so: country IN ('NO', 'SE', 'DK'). Does not need to find a place to eat outside the premises, so: restaurant = 0. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('NO', 'SE', 'DK') AND restaurant = 0;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to travel to Denmark, Sweden or Norway, so: country IN ('DK', 'SE', 'NO'). Prioritize facilities for exercise and relaxation, so: fitness_center = 1 AND spa = 1. Love to get a drink in the evening, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('DK', 'SE', 'NO') AND fitness_center = 1 AND spa = 1 AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Aalborg, Denmark, so: country = 'DK' AND city = 'Aalborg'. Needs a place to swim, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DK' AND city = 'Aalborg' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy hotel in Roskilde, so: city = 'Roskilde'. Needs a place for morning workout routine, so: fitness\\_center = 1. Needs a nutritious start to the day, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Roskilde' AND fitness\\_center = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a tranquil haven in Oslo, so: country = 'NO' AND city = 'Oslo'. Selfcare treatments, so: spa = 1. Relax in a serene pool setting, so: pool = 1. Indulge in gourmet dining, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'NO' AND city = 'Oslo' AND spa = 1 AND pool = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to find hotels in Copenhagen, so: city = 'Copenhagen'. They want to prepare for a bodybuilding competition, which could imply a need for a gym or fitness center. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Copenhagen' AND fitness_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Trondheim, so: city = 'Trondheim'. Needs a place to work late, so: no specific column matches this requirement. Needs a place to relax with a drink, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Trondheim' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a spot in Norway or Denmark, so: country IN ('NO', 'DK'). Adults seeking peace, so: adults\\_only = 1. Emphasis on wellness, so: spa = 1 AND fitness\\_center = 1. Nutritious start to the day, so: restaurant = 1 AND breakfast\\_available = 1. Spaces for quiet contemplation or reading, so: quiet\\_spaces = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('NO', 'DK') AND adults\\_only = 1 AND spa = 1 AND fitness\\_center = 1 AND restaurant = 1 AND breakfast\\_available = 1 AND quiet\\_spaces = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Stockholm, so: country = 'SE' AND city = 'Stockholm'. With a gym, so: fitness\\_center = 1. Needs to have options for a good breakfast, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'SE' AND city = 'Stockholm' AND fitness\\_center = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place to stay in Sweden, so: country = 'SE'. Needs a stunning view, but there is no specific column for that in the provided schema. However, the description column might contain the word \"stunning\" or similar. So, we can use a LIKE operator to search for that. Needs a place to enjoy a morning coffee on-site, so: has\\_coffee\\_shop = 1 or has\\_restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND (description LIKE '%stunning%' OR has\\_coffee\\_shop = 1 OR has\\_restaurant = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Aiming for a refreshing getaway in Gothenburg or Malmoe, so: (country = 'SE' AND (city = 'Gothenburg' OR city = 'Malmoe')). Indulging in local cuisine within the hotel, so: restaurant = 1. Spaces dedicated to wellness and training, so: spa = 1 AND fitness_center = 1. Cozy spots with the possibility to browse the internet for free, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND (city = 'Gothenburg' OR city = 'Malmoe') AND restaurant = 1 AND spa = 1 AND fitness_center = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Odense, so: city = 'Odense'. Offers a gym, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Odense' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Four star hotels, so: stars = 4. In Malmo, so: city = 'Malmo'. Offers free wifi, so: wifi = 'free'. Good reviews, so: rating >= 8 AND review\\_count >= 20. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Malmo' AND stars = 4 AND wifi = 'free' AND rating >= 8 AND review\\_count >= 20;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Copenhagen, so: city = 'Copenhagen'. With a fitness center, so: fitness\\_center = 1. Needs a place to enjoy morning coffee, so: no specific column mentioned, but we can assume that amenities like a restaurant or a cafe might be relevant. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Copenhagen' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Desire a retreat in Sweden, so: country = 'SE'. Looking for leisurely swims, so: pool = 1 OR ocean_view = 1. Getting a message, so: spa = 1. Options for savoring local cuisine without stepping out, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND (pool = 1 OR ocean_view = 1) AND spa = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Traveling to Stockholm, so: country = 'SE'. Driving, so: parking = 'free'. Bringing a dog, so: pet\\_friendly = 'pets allowed on request'. Needs to eat at the hotel, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND parking = 'free' AND pet\\_friendly = 'pets allowed on request' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a serene escape in Denmark, so: country = 'DK'. Caters to wellbeing, so: spa = 1 AND fitness_center = 1. Ensures can stay connected for work, so: wifi = 'free'. Offers gourmet experiences onsite, so: restaurant = 1. Idyllic view is a bonus, so: ocean_view = 1 OR description LIKE '%idyllic view%'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DK' AND (spa = 1 AND fitness_center = 1 AND wifi = 'free' AND restaurant = 1) OR (country = 'DK' AND description LIKE '%idyllic view%');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Find a hotel, so: SELECT \\*. Third largest city in Norway, so: We need to find the city name first. According to the available cities, the third largest city in Norway is Trondheim. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'NO' AND city = 'Trondheim' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Stuttgart, so: city = 'Stuttgart'. Needs a fitness center, so: fitness\\_center = 1. Needs wellness facilities, so: spa = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Stuttgart' AND fitness\\_center = 1 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for an eco-friendly retreat in Sweden, so: country = 'SE' AND increased\\_accessibility = 1. Needs to offer the possibility of staying fit, so: fitness\\_center = 1 OR spa = 1. Requires internet for occasional emails, so: wifi = 'free'. Needs to provide quality dining options to indulge in local flavors, so: description LIKE '%local%'. Needs captivating views, so: description LIKE '%views%'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND increased\\_accessibility = 1 AND (fitness\\_center = 1 OR spa = 1) AND wifi = 'free' AND description LIKE '%local%' AND description LIKE '%views%';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. A group of friends, so: NOT kids\\_friendly\\_buffet. One of them has a handicap, so: increased\\_accessibility = 1. Primarily for adults, so: adults\\_only = 1. Has a casino, so: casino = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE NOT kids\\_friendly\\_buffet AND increased\\_accessibility = 1 AND adults\\_only = 1 AND casino = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Lives just outside of Copenhagen, so: country NOT IN ('DK'). Likes to play golf, so: golf = 1. Travels with friends, so: adults\\_only = 0. Enjoys delicious food and wine, so: restaurant = 1 AND wifi = 'free'. Likes to sit and chat in the evening over a glass, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country NOT IN ('DK') AND golf = 1 AND adults\\_only = 0 AND restaurant = 1 AND wifi = 'free' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel equipped for guests in wheelchairs, so: increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1. Has adult entertainment, so: casino = 1 OR night\\_club = 1 OR live\\_music = 1. Doesn't allow kids, so: kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1 AND (casino = 1 OR night\\_club = 1 OR live\\_music = 1) AND kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Hungary, so: country = 'HU'. With a casino, so: casino = 1. With a water slide, so: water\\_park = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'HU' AND casino = 1 AND water\\_park = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a getaway to Malaga, so: city = 'Malaga'. Peace from the bustle of families, so: adults\\_only = 1 OR kids\\_friendly\\_buffet = 0 AND kids\\_friendly\\_buffet IS NOT NULL. Gambling, so: casino = 1. Thoughtful considerations for individuals requiring ramp access, so: increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Malaga' AND (adults\\_only = 1 OR kids\\_friendly\\_buffet IS NULL OR kids\\_friendly\\_buffet = 0) AND casino = 1 AND (increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. An active person, so: no specific requirement. Wants to pursue an active lifestyle, so: gym = 1 OR pool = 1 OR fitness_center = 1. Wants to socialize, so: bar = 1 OR restaurant = 1 OR kids\\_friendly\\_buffet = 1 OR playground = 1 OR increased\\_accessibility = 1 OR adults\\_only = 0. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE (gym = 1 OR pool = 1 OR fitness_center = 1) AND (bar = 1 OR restaurant = 1 OR kids_friendly_buffet = 1 OR playground = 1 OR increased_accessibility = 1 OR adults_only = 0);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wanting a hotel in Vilnius, so: city = 'Vilnius'. Looking for nightlife options, so: bar = 1 OR nightlife = 'yes'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Vilnius' AND (bar = 1 OR nightlife = 'yes');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Porto, so: country = 'PT' AND city = 'Porto'. Adults entertainment, so: bar = 1 OR casino = 1. No facilities for kids, so: pool = 0 AND child\\_pool = 0 AND playground = 0 AND kids\\_friendly\\_buffet = 0. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'PT' AND city = 'Porto' AND (bar = 1 OR casino = 1) AND pool = 0 AND child\\_pool = 0 AND playground = 0 AND kids\\_friendly\\_buffet = 0;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. The person is looking for a five star hotel, so: stars = 5. The person is in the city of Prague, so: country = 'CZ' AND city = 'Prague'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE stars = 5 AND country = 'CZ' AND city = 'Prague';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Lithuania, so: country = 'LT'. With a casino, so: casino = 1. Handicap friendly rooms, so: increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'LT' AND casino = 1 AND (increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Boston, so: city = 'Boston'. With free WiFi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Boston' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Los Angeles, so: city = 'Los-Angeles'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Needs a parking spot, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Los-Angeles' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly lodging in Miami, so: city = 'Miami'. Can accommodate fur babies, so: pet\\_friendly = 'pets allowed on request'. A place to park electric vehicle, so: parking = 'surcharge' OR parking = 'free' AND ev\\_charging\\_station = 1. A kids' meal option, so: kids\\_friendly\\_buffet = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Miami' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'surcharge' OR parking = 'free') AND ev\\_charging\\_station = 1 AND kids\\_friendly\\_buffet = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Miami is a city, so: city = 'Miami'. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Miami' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Cancun, so: country = 'MX' AND city = 'Cancun'. Offers breakfast, so: restaurant = 1. Has a gym, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'MX' AND city = 'Cancun' AND restaurant = 1 AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking accommodations in Los Angeles, so: city = 'Los-Angeles'. Wheelchair accessible, so: increased\\_accessibility = 1. Place for electric car to charge, so: parking = 'surcharge' AND wifi = 'free' OR wifi = 'surcharge' AND ev\\_charging\\_station = 1. Welcoming to small dog, so: pet\\_friendly = 'pets allowed on request'. Cozy spot, no specific column for that, but we can assume that a lower number of rooms or a smaller hotel might be considered cozier. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND increased\\_accessibility = 1 AND (parking = 'surcharge' AND wifi = 'free' OR wifi = 'surcharge' AND ev\\_charging\\_station = 1) AND pet\\_friendly = 'pets allowed on request' ORDER BY review\\_count DESC LIMIT 10;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Los Angeles, so: city = 'Los-Angeles'. Offers free parking, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Los Cabos, so: city = 'Los-Cabos'. Needs to be near a beach, so: beach\\_access IN ('private beach', 'beach access'). Needs a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Cabos' AND beach\\_access IN ('private beach', 'beach access') AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a family trip to Los Angeles, so: city = 'Los-Angeles'. With a toddler, so: pet_friendly = 'pets allowed on request'. Needs space for an SUV, so: parking = 'surcharge'. Can sip cocktails in the evening, so: bar = 1. Helps with laundry, so: washing_and_drier = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND pet_friendly = 'pets allowed on request' AND parking = 'surcharge' AND bar = 1 AND washing_and_drier = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Tulum, so: country = 'MX' AND city = 'Tulum'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'MX' AND city = 'Tulum' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Rio de Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro'. Needs fast internet, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a peaceful getaway in Playa del Carmen, so: city = 'Playa-del-Carmen'. Needs a kitchen to make meals, so: kitchen = 1. Not worrying about breakfast, so: restaurant = 0. A private place, so: adults\\_only = 1. A nice view, so: ocean\\_view = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Playa-del-Carmen' AND kitchen = 1 AND restaurant = 0 AND adults\\_only = 1 AND ocean\\_view = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Puerto Vallarta, so: country = 'MX' AND city = 'Puerto-Vallarta'. With a spa facility, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND city = 'Puerto-Vallarta' AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wanting a hotel in Rio de Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro'. Bringing a pet, so: pet\\_friendly = 'pets allowed on request'. Enjoying beach time, so: beach\\_access = 'beach access'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND pet\\_friendly = 'pets allowed on request' AND beach\\_access = 'beach access';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly resort in Miami, so: city = 'Miami'. Caters to young kids' playing needs, so: playground = 1. Allows preparing own meals, so: kitchen = 1. Helps stay connected for occasional work emails, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Miami' AND playground = 1 AND kitchen = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Los Angeles, so: city = 'Los-Angeles'. Needs a hotel with a casino, so: casino = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND casino = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Boston, so: country = 'US' AND city = 'Boston'. Wheelchair friendly, so: increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1. Has a place to park, so: parking IN ('free', 'surcharge'). Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'US' AND city = 'Boston' AND increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1 AND parking IN ('free', 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a vacation to Miami, so: country = 'US' AND city = 'Miami'. Looking for rooms that accommodate toddlers and infants, so: cribs = 1 AND unit_wheelchair_accessible = 1. Needs to have a place to heat up milk or make quick snacks, so: kitchen = 1. Ideally, it should have amenities to keep a toddler entertained, so: playground = 1 OR child_pool = 1 OR kids_friendly_buffet = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'US' AND city = 'Miami' AND (cribs = 1 AND unit_wheelchair_accessible = 1) AND kitchen = 1 AND (playground = 1 OR child_pool = 1 OR kids_friendly_buffet = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want hotels in Oaxaca, so: country = 'MX' AND city = 'Oaxaca'. With air conditioning, so: aircondition = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND city = 'Oaxaca' AND aircondition = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Rio de Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro'. Offer an airport shuttle service, so: airport_shuttle IS NOT NULL. Have a swimming pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND airport_shuttle IS NOT NULL AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a romantic getaway in Mexico, so: country = 'MX'. Bringing a dog, so: pet\\_friendly = 'pets allowed on request'. Private place for the car, so: parking = 'private'. Cozy place to have drinks in the evening, so: bar = 1. Good internet connection, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND pet\\_friendly = 'pets allowed on request' AND parking = 'private' AND bar = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Guadalajara, so: city = 'Guadalajara'. Offers free WiFi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Guadalajara' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Brazil, so: country = 'BR'. Needs a view of the ocean, so: ocean\\_view = 1. Needs a place for the car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND ocean\\_view = 1 AND (parking = 'free' OR parking = 'surgarge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a kid-friendly hotel in Mexico, so: country = 'MX'. Perfect for a toddler, so: kids\\_friendly\\_buffet = 1 AND cribs = 1. Pool just for little ones, so: child\\_pool = 1. Place to quickly do laundry, so: washing\\_and\\_drier = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'MX' AND kids\\_friendly\\_buffet = 1 AND cribs = 1 AND child\\_pool = 1 AND washing\\_and\\_drier = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in La Paz, so: city = 'La-Paz'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'La-Paz' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Brazil, so: country = 'BR'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Offers an airport shuttle, so: airport\\_shuttle = 'possible' or airport\\_shuttle = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'BR' AND pet\\_friendly = 'pets allowed on request' AND (airport\\_shuttle = 'possible' OR airport\\_shuttle = 'free');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a family holiday in Cancun, so: country = 'MX' AND city = 'Cancun'. Kid-friendly, so: kids\\_friendly\\_buffet = 1 AND playground = 1 AND child\\_pool = 1. Need a place that can provide a crib, so: cribs = 1. Having access to a place to cook, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND city = 'Cancun' AND kids\\_friendly\\_buffet = 1 AND playground = 1 AND child\\_pool = 1 AND cribs = 1 AND kitchen = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in San Miguel de Allende, so: city = 'San-Miguel-de-Allende'. Offers free WiFi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'San-Miguel-de-Allende' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Rio de Janeiro, so: country = 'BR' AND city = 'Rio de Janeiro'. With a gym and a pool, so: fitness\\_center = 1 AND pool = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'BR' AND city = 'Rio de Janeiro' AND fitness\\_center = 1 AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking accommodations in Mexico, so: country = 'MX'. Suitable for a family trip with small kids, so: kids\\_friendly\\_buffet = 1 OR child\\_pool = 1 OR playground = 1. Needs a place for warming baby bottles or simple meal prep, so: kitchen = 1. Wants a cozy home atmosphere, so: adults\\_only = 0. Possibly with some crib availability, so: cribs = 1 OR pet\\_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND (kids\\_friendly\\_buffet = 1 OR child\\_pool = 1 OR playground = 1) AND kitchen = 1 AND adults\\_only = 0 AND (cribs = 1 OR pet\\_friendly = 'pets allowed on request');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Tulum, so: city = 'Tulum'. Needs to have a kitchen, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Tulum' AND kitchen = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want a pet-friendly hotel, so: pet\\_friendly = 'pets allowed on request'. They will be arriving in a car, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND pet\\_friendly = 'pets allowed on request' AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy stay in Los Angeles, so: city = 'Los-Angeles'. Suitable for a family with a toddler and a baby, so: kids\\_friendly\\_buffet = 1 AND cribs = 1. Needs a kitchenette for preparing baby food, so: kitchen = 1 AND washing\\_and\\_drier = 1. Easy access for stroller, so: wheelchair\\_accessible = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND kids\\_friendly\\_buffet = 1 AND cribs = 1 AND kitchen = 1 AND washing\\_and\\_drier = 1 AND wheelchair\\_accessible = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Cancun, so: country = 'MX' AND city = 'Cancun'. With free parking, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND city = 'Cancun' AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Brasilia, so: country = 'BR' AND city = 'Brasilia'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Has a spot for the car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'BR' AND city = 'Brasilia' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy retreat in Los Angeles, so: city = 'Los-Angeles'. Welcoming to a four-legged family member, so: pet_friendly = 'pets allowed on request'. Offers a place to park a camper van without extra charges, so: parking = 'free'. Provides a chance to unwind with a cool dip, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND pet_friendly = 'pets allowed on request' AND parking = 'free' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Florianopolis, so: country = 'BR' AND city = 'Florianopolis'. With 3 stars, so: stars = 3. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND city = 'Florianopolis' AND stars = 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Los Angeles, so: city = 'Los-Angeles'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. On a budget, so: stars <= 3. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Los-Angeles' AND pet\\_friendly = 'pets allowed on request' AND stars <= 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family friendly lodging in Brazil, so: country = 'BR'. Needs to provide a crib, so: cribs = 1. Has a designated play area, so: playground = 1 OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1. Not too pricey, so: stars <= 3. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND cribs = 1 AND (playground = 1 OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1) AND stars <= 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Miami is a city, so: city = 'Miami'. Five stars, so: stars = 5. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Miami' AND stars = 5;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a pet-friendly accommodation, so: pet\\_friendly = 'pets allowed on request'. Needs a spot for the car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'US' AND city = 'Boston' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a trip to Los Angeles, so: city = 'Los-Angeles'. Needs to provide cribs, so: cribs = 1. Therefore, the SQL statement answer is: SELECT name, address, city, rating, review_count FROM hotels WHERE city = 'Los-Angeles' AND cribs = 1 LIMIT 5;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Boston, so: city = 'Boston'. Needs to have three or more stars, so: stars >= 3. Needs to have good ratings, so: rating >= 8 AND review\\_count >= 20. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Boston' AND stars >= 3 AND rating >= 8 AND review\\_count >= 20;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want a hotel in Rio de Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro'. Travelling with 2 dogs, so: pet\\_friendly = 'pets allowed'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND pet\\_friendly = 'pets allowed';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy place in Mexico, so: country = 'MX'. By the ocean, so: ocean\\_view = 1 OR beach\\_access IN ('private beach', 'beach access'). Needs privacy for sunbathing, so: adults\\_only = 1. Arriving from the airport, so: airport\\_shuttle = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND (ocean\\_view = 1 OR beach\\_access IN ('private beach', 'beach access')) AND adults\\_only = 1 AND airport\\_shuttle = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Foz do Iguacu, so: country = 'BR' AND city = 'Foz do Iguacu'. With a pool, so: pool = 1. Needs free wifi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND city = 'Foz do Iguacu' AND pool = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Rio de Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro'. Bringing a cat, so: pet\\_friendly = 'pets allowed on request'. Offers a stunning view of the sea, so: ocean\\_view = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND pet\\_friendly = 'pets allowed on request' AND ocean\\_view = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Playa del Carmen, so: city = 'Playa-del-Carmen'. Needs to be cooled down in the room, so: aircondition = 1. Needs to overlook the sea, so: ocean\\_view = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Playa-del-Carmen' AND aircondition = 1 AND ocean\\_view = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Miami, so: country = 'US' AND city = 'Miami'. With a water park, so: water\\_park = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'US' AND city = 'Miami' AND water\\_park = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Boston, so: country = 'US' AND city = 'Boston'. Arriving in a Tesla, so: ev\\_charging\\_station = 1. Needs a place to drink in the evening, so: bar = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'US' AND city = 'Boston' AND ev\\_charging\\_station = 1 AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a kid-friendly place in Los Angeles, so: city = 'Los-Angeles'. A place where a toddler can sleep safely, so: unit_wheelchair_accessible = 1 OR increased_accessibility = 1. Easily park a car, so: parking = 'free'. Allows bringing a dog, so: pet_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND (unit_wheelchair_accessible = 1 OR increased_accessibility = 1) AND parking = 'free' AND pet_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Miami, so: city = 'Miami'. Does not permit kids, so: pet\\_friendly = 'no pets'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Miami' AND pet\\_friendly = 'no pets';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly lodging option in Boston, so: city = 'Boston' AND pet\\_friendly = 'pets allowed'. Needs a spot for the car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Boston' AND pet\\_friendly = 'pets allowed' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a family vacation to Los Angeles, so: city = 'Los-Angeles'. Child-friendly, so: kids_friendly_buffet = 1 OR playground = 1 OR child_pool = 1. Needs a place to play outside or where the young ones can splash around safely in water, so: playground = 1 OR pool = 1. Prefer a place where they won't have to worry about meal times for the kids, so: kids_friendly_buffet = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND (playground = 1 OR pool = 1) AND kids_friendly_buffet = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In Mexico, so: country = 'MX'. Needs to have wifi, so: wifi = 'free'. Wants to eat at the hotel, but doesn't want to cook, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND wifi = 'free' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a place to stay in Miami, so: city = 'Miami'. With a fitness center, so: fitness\\_center = 1. Can bring a dog, so: pet\\_friendly = 'pets allowed'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Miami' AND fitness\\_center = 1 AND pet\\_friendly = 'pets allowed';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a vacation spot in Brazil, so: country = 'BR'. Suitable for a family getaway, so: adults\\_only = 0. Needs a nice sleep for a toddler, so: increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1. Can recharge electric car, so: ev\\_charging\\_station = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND adults\\_only = 0 AND (increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1) AND ev\\_charging\\_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Miami, so: city = 'Miami'. Needs airconditioning, so: aircondition = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Miami' AND aircondition = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a pet-friendly accommodation, so: pet\\_friendly IN ('pets allowed on request', 'pets allowed'). Needs a spot for the car, so: parking = 'free' OR parking = 'surcharge'. Looking for a place in Rio de Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND pet\\_friendly IN ('pets allowed on request', 'pets allowed') AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy stay in Los Angeles, so: city = 'Los-Angeles'. Enjoys beach walks, so: beach_access IN ('beach access', 'private beach'). Bringing a dog, so: pet_friendly = 'pets allowed on request'. Needs a kitchenette, so: kitchen IN ('kitchen', 'kitchenette'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND beach_access IN ('beach access', 'private beach') AND pet_friendly = 'pets allowed on request' AND (kitchen = 'kitchen' OR kitchen = 'kitchenette');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Miami, so: city = 'Miami'. Offers free Wi-Fi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Miami' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly accommodation in Rio-de-Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro' AND pet_friendly = 'pets allowed'. Needs to have a parking spot, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND pet_friendly = 'pets allowed' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a romantic getaway to Los Angeles, so: city = 'Los-Angeles'. Wanting incredible water views, so: ocean\\_view = 1. Need a place for an electric car, so: ev\\_charging\\_station = 1. Looking for a place for a massage and relaxation, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Los-Angeles' AND ocean\\_view = 1 AND ev\\_charging\\_station = 1 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Miami, so: country = 'US' AND city = 'Miami'. Needs to have a restaurant, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'US' AND city = 'Miami' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly hotel in the US, so: country = 'US' AND pet\\_friendly = 'pets allowed'. Needs to have a parking spot, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'US' AND pet\\_friendly = 'pets allowed' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Dreaming of a romantic getaway in Mexico, so: country = 'MX'. Not too hard on pockets, so: stars <= 3. Needs to have good ratings, so: rating >= 8 AND review_count >= 20. Scenic view, possibly the ocean, so: ocean_view = 1 OR (beach_access IN ('private beach', 'beach access') AND lat LIKE '%%-20.%' OR lat LIKE '%%-18.%' OR lat LIKE '%%-19.%' OR lat LIKE '%%-21.%' OR lat LIKE '%%-22.%' OR lat LIKE '%%-23.%' OR lat LIKE '%%-24.%' OR lat LIKE '%%-25.%' OR lat LIKE '%%-26.%' OR lat LIKE '%%-27.%' OR lat LIKE '%%-28.%' OR lat LIKE '%%-29.%' OR lat LIKE '%%-30.%' OR lat LIKE '%%-31.%' OR lat LIKE '%%-32.%' OR lat LIKE '%%-33.%' OR lat LIKE '%%-34.%' OR lat LIKE '%%-35.%' OR lat LIKE '%%-36.%' OR lat LIKE '%%-37.%' OR lat LIKE '%%-38.%' OR lat LIKE '%%-39.%' OR lat LIKE '%%-40.%' OR lat LIKE '%%-41.%' OR lat LIKE '%%-42.%' OR lat LIKE '%%-43.%' OR lat LIKE '%%-44.%' OR lat LIKE '%%-45.%' OR lat LIKE '%%-46.%' OR lat LIKE '%%-47.%' OR lat LIKE '%%-48.%' OR lat LIKE '%%-49.%' OR lat LIKE '%%-50.%' OR lat LIKE '%%-51.%' OR lat LIKE '%%-52.%' OR lat LIKE '%%-53.%' OR lat LIKE '%%-54.%' OR lat LIKE '%%-55.%' OR lat LIKE '%%-56.%' OR lat LIKE '%%-57.%' OR lat LIKE '%%-58.%' OR lat LIKE '%%-59.%' OR lat LIKE '%%-60.%' OR lat LIKE '%%-61.%' OR lat LIKE '%%-62.%' OR lat LIKE '%%-63.%' OR lat LIKE '%%-64.%' OR lat LIKE '%%-65.%' OR lat LIKE '%%-66.%' OR lat LIKE '%%-67.%' OR lat LIKE '%%-68.%' OR lat LIKE '%%-69.%' OR lat LIKE '%%-70.%' OR lat LIKE '%%-71.%' OR lat LIKE '%%-72.%' OR lat LIKE '%%-73.%' OR lat LIKE '%%-74.%' OR lat LIKE '%%-75.%' OR lat LIKE '%%-76.%' OR lat LIKE '%%-77.%' OR lat LIKE '%%-78.%' OR lat LIKE '%%-79.%' OR lat LIKE '%%-80.%' OR lat LIKE '%%-81.%' OR lat LIKE '%%-82.%' OR lat LIKE '%%-83.%' OR lat LIKE '%%-84.%' OR lat LIKE '%%-85.%' OR lat LIKE '%%-86.%' OR lat LIKE '%%-87.%' OR lat LIKE '%%-88.%' OR lat LIKE '%%-89.%' OR lat LIKE '%%-90.%' OR lat LIKE '%%-91.%' OR lat LIKE '%%-92",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Cancun, so: country = 'MX' AND city = 'Cancun'. Needs a beach, so: beach\\_access IN ('beach access', 'private beach'). Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'MX' AND city = 'Cancun' AND beach\\_access IN ('beach access', 'private beach');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for accommodations in Rio de Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro'. Needs to offer an airport shuttle service, so: airport_shuttle IS NOT NULL. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND airport_shuttle IS NOT NULL;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Mexico, so: country = 'MX'. It's for families with toddlers, so: kids\\_friendly\\_buffet = 1 AND playground = 1. Needs to be at least a 4 star hotel, so: stars >= 4. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'MX' AND kids\\_friendly\\_buffet = 1 AND playground = 1 AND stars >= 4;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Miami, so: city = 'Miami'. Has a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Miami' AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Rio de Janeiro, so: country = 'BR' AND city = 'Rio-de-Janeiro'. Pet friendly, so: pet\\_friendly = 'pets allowed on request'. Offers free internet, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'BR' AND city = 'Rio-de-Janeiro' AND pet\\_friendly = 'pets allowed on request' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a trip to Miami, so: country = 'US' AND city = 'Miami'. Big family with 6 kids, so: kids\\_friendly\\_buffet = 1 AND child\\_pool = 1 AND playground = 1. Ideally, a place for toddlers to play and sleep safely, so: unit\\_wheelchair\\_accessible = 1 AND increased\\_accessibility = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'US' AND city = 'Miami' AND kids\\_friendly\\_buffet = 1 AND child\\_pool = 1 AND playground = 1 AND unit\\_wheelchair\\_accessible = 1 AND increased\\_accessibility = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Miami, so: city = 'Miami'. Needs to have laundry facilities, so: washing\\_and\\_drier = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Miami' AND washing\\_and\\_drier = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In Boston, so: city = 'Boston'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Place to park a car, so: parking = 'free'. Likes to gamble, so: casino = 1. Minimum 3-star hotel, so: stars >= 3. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Boston' AND pet\\_friendly = 'pets allowed on request' AND parking = 'free' AND casino = 1 AND stars >= 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a family vacation to Cancun, so: country = 'MX' AND city = 'Cancun'. Needs to be welcoming to families, so: kids\\_friendly\\_buffet = 1 AND kids\\_friendly = 1. Children love to play, so: playground = 1 OR water\\_park = 1 OR pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MX' AND city = 'Cancun' AND (playground = 1 OR water\\_park = 1 OR pool = 1) AND kids\\_friendly\\_buffet = 1 AND kids\\_friendly = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a 4-star hotel, so: stars = 4. In Bangkok, so: country = 'TH' AND city = 'Bangkok'. With a swimming pool, so: pool = 1. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'TH' AND city = 'Bangkok' AND stars = 4 AND pool = 1 AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a family-friendly establishment in Phuket, so: country = 'TH' AND city = 'Phuket'. Welcomes furry friends, so: pet_friendly = 'pets allowed on request'. Kids can play outdoors, so: playground = 1. A kitchenette for morning pancakes is a plus, so: kitchenette = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND pet_friendly = 'pets allowed on request' AND playground = 1 AND kitchenette = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In Bangkok, so: city = 'Bangkok'. With a fitness center, so: fitness\\_center = 1. Thai massages available, so: description LIKE '%thai massage%'. A place for drinking, so: bar = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Bangkok' AND fitness\\_center = 1 AND description LIKE '%thai massage%' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Chiang Mai, so: country = 'TH' AND city = 'Chiang Mai'. Needs to be suitable for remote work, which doesn't require extra payment, so: wifi = 'free'. Needs to be suitable for relaxation, which doesn't require any specific column. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Chiang Mai' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a serene retreat in Phuket, so: country = 'TH' AND city = 'Phuket'. Adults only, so: adults\\_only = 1. Preferably with a view of the sea, so: ocean\\_view = 1. Needs amenities like a spa and dining, so: spa = 1 AND restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND adults\\_only = 1 AND ocean\\_view = 1 AND spa = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Kyoto, so: country = 'JP' AND city = 'Kyoto'. With a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'JP' AND city = 'Kyoto' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Sapporo, so: city = 'Sapporo'. Needs a peaceful night's sleep, so: adults\\_only = 1 OR increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1. Needs a place to park a rental car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Sapporo' AND (adults\\_only = 1 OR increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1) AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Aiming for Thailand, so: country = 'TH'. Looking for luxurious hotels, so: stars >= 4. Bans young children, so: pets_friendly = 'no pets'. Ocean view, so: ocean_view = 1. Personal culinary experiences available on-site, so: restaurant = 1. No overcrowded pools, so: review_count <= 500 OR (review_count >= 1000 AND rating >= 9). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND stars >= 4 AND pets_friendly = 'no pets' AND ocean_view = 1 AND restaurant = 1 AND (review_count <= 500 OR (review_count >= 1000 AND rating >= 9));",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Tokyo, so: country = 'JP' AND city = 'Tokyo'. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'JP' AND city = 'Tokyo' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Osaka, so: country = 'JP' AND city = 'Osaka'. Suitable for telecommuting, which means it must offer free high-speed internet, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'JP' AND city = 'Osaka' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a lodging option in Thailand, so: country = 'TH'. Ideal for a young family, so: kids\\_friendly\\_buffet = 1 AND child\\_pool = 1 AND playground = 1. Equipped with amenities to entertain toddlers, so: kids\\_friendly\\_buffet = 1 AND child\\_pool = 1 AND playground = 1. Offers convenient charging stations for electric vehicle, so: ev\\_charging\\_station = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND (kids\\_friendly\\_buffet = 1 AND child\\_pool = 1 AND playground = 1) AND ev\\_charging\\_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wants a hotel in Osaka, so: country = 'JP' AND city = 'Osaka'. Needs a gym, so: fitness\\_center = 1. Needs to cook own meals, so: kitchen = 1. Brings a cat, so: pet\\_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'JP' AND city = 'Osaka' AND fitness\\_center = 1 AND kitchen = 1 AND pet\\_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a tranquil retreat in Kyoto, so: country = 'JP' AND city = 'Kyoto'. Must have a serene ambiance, so: description LIKE '%serene%'. Preferably with a spa, so: spa = 1. Intimate dining option for couples, so: restaurant = 1 AND seating_capacity <= 20. A place to go for a drink afterwards, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'JP' AND city = 'Kyoto' AND (description LIKE '%serene%' OR description LIKE '%quiet%') AND spa = 1 AND restaurant = 1 AND seating_capacity <= 20 AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Phuket, so: country = 'TH' AND city = 'Phuket'. With a view of the water, so: ocean\\_view = 1. With a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND ocean\\_view = 1 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a family vacation in Phuket, so: country = 'TH' AND city = 'Phuket'. Kid-friendly, so: kids\\_friendly\\_buffet = 1 AND playground = 1 AND child\\_pool = 1. Close to the beach, so: beach\\_access IN ('private beach', 'beach access'). Spouse and I want to enjoy golf, so: golf = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND (kids\\_friendly\\_buffet = 1 AND playground = 1 AND child\\_pool = 1) AND beach\\_access IN ('private beach', 'beach access') AND golf = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Searching for a luxurious stay in Bangkok, so: country = 'TH' AND city = 'Bangkok'. Needs to have a place to workout, so: fitness\\_center = 1. Needs to have a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Bangkok' AND fitness\\_center = 1 AND spa = 1 AND stars >= 4.5;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-oriented getaway in India, so: country = 'IN'. Suitable for toddlers, so: child_pool = 1. Place in the room for home-cooked meals, so: kitchen = 1. It's a plus if the place accepts pets, so: pet_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IN' AND child_pool = 1 AND kitchen = 1 AND pet_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Mumbai, so: city = 'Mumbai'. With free parking, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Mumbai' AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a place in Mumbai, so: country = 'IN' AND city = 'Mumbai'. Must be welcoming to children, so: kids\\_friendly\\_buffet = 1 OR pet\\_friendly = 'pets allowed'. Amenities like a playground, so: playground = 1. Rooms equipped for a young family's needs, so: cribs = 1 AND unit\\_wheelchair\\_accessible = 1. Family-friendly dining option, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IN' AND city = 'Mumbai' AND (kids\\_friendly\\_buffet = 1 OR pet\\_friendly = 'pets allowed') AND playground = 1 AND cribs = 1 AND unit\\_wheelchair\\_accessible = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Tokyo, so: country = 'JP' AND city = 'Tokyo'. Needs to have a kitchen in the room, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'JP' AND city = 'Tokyo' AND kitchen = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Tokyo, so: country = 'JP' AND city = 'Tokyo'. Deluxe accommodation, so: stars >= 4. Relaxation experience, so: spa = 1 AND pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'JP' AND city = 'Tokyo' AND stars >= 4 AND spa = 1 AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Searching for a child-friendly stay in Bangkok, so: country = 'TH' AND city = 'Bangkok'. Needs a hotel with room for baby beds, so: cribs = 1. Safe indoor play areas, so: playground = 1 OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1. Heating baby food is a plus, so: kitchen = 1 OR wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Bangkok' AND cribs = 1 AND (playground = 1 OR kids\\_friendly\\_buffet = 1 OR child\\_pool = 1) AND (kitchen = 1 OR wifi = 'free');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Bangkok, so: city = 'Bangkok'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Bangkok' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Phuket, so: country = 'TH' AND city = 'Phuket'. Needs a quiet place to work, so: description LIKE '%quiet%' OR description LIKE '%silent%'. Needs speedy internet, so: wifi = 'free' OR wifi = 'surcharge' AND description LIKE '%high-speed%' OR description LIKE '%fast%'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND (description LIKE '%quiet%' OR description LIKE '%silent%') AND (wifi = 'free' OR wifi = 'surcharge') AND (description LIKE '%high-speed%' OR description LIKE '%fast%');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly retreat in Mumbai, so: country = 'IN' AND city = 'Mumbai'. Needs facilities for infants, so: cribs = 1 AND kids_friendly_buffet = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IN' AND city = 'Mumbai' AND cribs = 1 AND kids_friendly_buffet = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Hotels in Bangkok, so: country = 'TH' AND city = 'Bangkok'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Has a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'TH' AND city = 'Bangkok' AND pet\\_friendly = 'pets allowed on request' AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy place in Phuket, so: country = 'TH' AND city = 'Phuket'. Offers privacy, so: adults\\_only = 1 OR ocean\\_view = 1. Ideally, it has a romantic restaurant, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND (adults\\_only = 1 OR ocean\\_view = 1) AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly accommodation, so: pet\\_friendly = 'pets allowed on request'. In Bangkok, so: city = 'Bangkok'. With a place for lifting weights, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Bangkok' AND pet\\_friendly = 'pets allowed on request' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-oriented resort in Phuket, so: country = 'TH' AND city = 'Phuket'. Welcoming to toddlers, so: kids\\_friendly\\_buffet = 1 AND cribs = 1. Offers a space for playing, so: playground = 1. Includes breakfast options, so: restaurant = 1 AND (description LIKE '%breakfast%' OR description LIKE '%buffet%'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND (playground = 1 AND kids\\_friendly\\_buffet = 1 AND cribs = 1) AND restaurant = 1 AND (description LIKE '%breakfast%' OR description LIKE '%buffet%');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Osaka, Japan, so: country = 'JP' AND city = 'Osaka'. Wants to relax, so: spa = 1. Swimming pool, so: pool = 1. Might get a car, so: parking = 'free' OR 'surcharge'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'JP' AND city = 'Osaka' AND spa = 1 AND pool = 1 AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly stay in Phuket, so: country = 'TH' AND city = 'Phuket'. Needs to promise a good night's sleep for a baby, so: adults\\_only = 0. Needs to allow preparing meals, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND adults\\_only = 0 AND kitchen = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly accommodation in Bangkok, so: country = 'TH' AND city = 'Bangkok' AND pet\\_friendly = 'pets allowed on request'. Offers an airport shuttle service, so: airport\\_shuttle = 'free' or 'possible'. Needs to be a nice hotel, so: rating >= 8. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Bangkok' AND pet\\_friendly = 'pets allowed on request' AND (airport\\_shuttle = 'free' OR airport\\_shuttle = 'possible') AND rating >= 8;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a summer getaway to Phuket, so: country = 'TH' AND city = 'Phuket'. Needs to be near the sea, so: beach\\_access IN ('private beach', 'beach access'). Friendly for tots needing cribs, so: cribs = 1. With some fun water activities, so: water\\_park = 1 OR pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND (beach\\_access IN ('private beach', 'beach access') AND cribs = 1) AND (water\\_park = 1 OR pool = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Bangkok, so: country = 'TH' AND city = 'Bangkok'. With a stunning city view, so: description LIKE '%stunning city view%'. Preferably has a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Bangkok' AND (description LIKE '%stunning city view%' OR pool = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a top quality and high-class stay, so: stars = 5. In Phuket, so: country = 'TH' AND city = 'Phuket'. Romantic, so: adults\\_only = 1. Private beach or a view of the sea, so: (beach\\_access = 'private beach' OR (city = 'Phuket' AND (lat LIKE '%%-%7C%-90%' OR lat LIKE '%-8%-%' OR lat LIKE '%-7%-%' OR lat LIKE '%-8%-8%' OR lat LIKE '%-7%-8%' OR lat LIKE '%-9%-%'))). Spa for wife to pamper herself, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND stars = 5 AND adults\\_only = 1 AND spa = 1 AND (beach\\_access = 'private beach' OR (city = 'Phuket' AND (lat LIKE '%%-%7C%-90%' OR lat LIKE '%-8%-%' OR lat LIKE '%-7%-%' OR lat LIKE '%-8%-8%' OR lat LIKE '%-7%-8%' OR lat LIKE '%-9%-%')));",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for pet-friendly accommodation, so: pet\\_friendly IN ('pets allowed on request'). In Bangkok, so: city = 'Bangkok'. Offers an airport shuttle, so: airport\\_shuttle IN ('possible', 'free'). Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Bangkok' AND pet\\_friendly IN ('pets allowed on request') AND airport\\_shuttle IN ('possible', 'free');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy place in Krabi, so: city = 'Krabi'. Great for backpackers, so: no specific column, but we can assume a lower price range. Needs to be cheap, so: stars <= 2. Has lockers for belongings, so: no specific column, but we can assume it's a hostel or budget accommodation, which often have lockers. Has a communal place to cook, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Krabi' AND stars <= 2 AND kitchen = 1 AND (type = 'hostel' OR type = 'budget');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Bangkok, so: country = 'TH' AND city = 'Bangkok'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Has a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'TH' AND city = 'Bangkok' AND pet\\_friendly = 'pets allowed on request' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly stay in Phuket, so: country = 'TH' AND city = 'Phuket'. Welcomes a pet, so: pet\\_friendly = 'pets allowed on request'. Offers a place for morning workouts, so: fitness\\_center = 1. Somewhere the kids can splash around, so: pool = 1 OR water\\_park = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Phuket' AND pet\\_friendly = 'pets allowed on request' AND fitness\\_center = 1 AND (pool = 1 OR water\\_park = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want hotels in Kanchanaburi, so: country = 'TH' AND city = 'Kanchanaburi'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'TH' AND city = 'Kanchanaburi' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Koh Samui, so: country = 'TH' AND city = 'Koh-Samui'. Needs free wifi, so: wifi = 'free'. Needs a view of the water, so: ocean\\_view = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Koh-Samui' AND wifi = 'free' AND ocean\\_view = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a cozy retreat in Chiang Mai, so: country = 'TH' AND city = 'Chiang-Mai'. Allows dogs, so: pet\\_friendly = 'pets allowed on request'. Has a pool for children, so: child\\_pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Chiang-Mai' AND pet\\_friendly = 'pets allowed on request' AND child\\_pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Kyoto, so: city = 'Kyoto'. Does not allow pets, so: pet\\_friendly = 'no pets'. Needs an in-house stove top, so: kitchen = 1 AND (kitchen LIKE '%stove top%' OR kitchen LIKE '%stove%top%' OR kitchen LIKE '%stove-top%'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Kyoto' AND pet\\_friendly = 'no pets' AND kitchen IN (SELECT id FROM hotels WHERE (kitchen LIKE '%stove top%' OR kitchen LIKE '%stove%top%' OR kitchen LIKE '%stove-top%'));",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly place in Chiang Mai, so: country = 'TH' AND city = 'Chiang Mai'. Comfy during hot season, so: no specific column. A spot for kids to cool off, so: pool = 1 OR water_park = 1. No extra charge for bringing a dog, so: pet\\_friendly = 'pets allowed'. At least a 3 star hotel, so: stars >= 3. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Chiang Mai' AND (pool = 1 OR water_park = 1) AND pet\\_friendly = 'pets allowed' AND stars >= 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Prague, so: country = 'CZ' AND city = 'Prague'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'CZ' AND city = 'Prague' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Warsaw, so: country = 'PL' AND city = 'Warsaw'. With spa services, so: spa = 1. Needs a possible ride from the airport, so: airport_shuttle IN ('possible', 'free'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'PL' AND city = 'Warsaw' AND spa = 1 AND airport_shuttle IN ('possible', 'free');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy retreat in Budapest, so: country = 'HU' AND city = 'Budapest'. Offers relaxation options like a sauna, so: spa = 1. A bit of onsite nightlife, so: bar = 1. Needs to have a spot to safely park a rental car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND spa = 1 AND bar = 1 AND (parking = 'free' OR parking = 'surgcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Krakow is a city, so: city = 'Krakow'. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Krakow' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Budapest, so: country = 'HU' AND city = 'Budapest'. Needs free internet, so: wifi = 'free'. Needs a restaurant, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND wifi = 'free' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In Warsaw, so: country = 'PL' AND city = 'Warsaw'. Serene and luxurious, so: stars >= 4.5. Facilities for unwinding, so: spa = 1 AND fitness_center = 1. Catching up over drinks, so: bar = 1. Hassle-free connectivity, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'PL' AND city = 'Warsaw' AND stars >= 4.5 AND spa = 1 AND fitness_center = 1 AND bar = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Budapest, so: country = 'HU' AND city = 'Budapest'. With a gym, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Warsaw, so: country = 'PL' AND city = 'Warsaw'. Offers spa facilities, so: spa = 1. Has a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'PL' AND city = 'Warsaw' AND spa = 1 AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking accommodation in Oslo, so: country = 'NO' AND city = 'Oslo'. With a spa, so: spa = 1. Enjoying good food onsite, so: restaurant = 1. Having easy access to the internet, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'NO' AND city = 'Oslo' AND spa = 1 AND restaurant = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Show hotels in Gothenburg, so: city = 'Gothenburg'. With a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Gothenburg' AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Budapest, so: country = 'HU' AND city = 'Budapest'. Offers a fitness center, so: fitness\\_center = 1. Offers parking, so: parking IN ('free', 'surcharge'). Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND fitness\\_center = 1 AND parking IN ('free', 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a tranquil stay in Berlin, so: city = 'Berlin'. Needs a spa, so: spa = 1. Options for evening drinks at the hotel, so: bar = 1. Convenience for rental car, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Berlin' AND spa = 1 AND bar = 1 AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In need of a relaxing retreat in Paris, so: country = 'FR' AND city = 'Paris'. Wants to enjoy wellness facilities like a spa, so: spa = 1. Wants to unwind in the evening with a drink, so: bar = 1. Wants to take leisurely swims, so: pool = 1. Wants to have a delicious meal nearby, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city = 'Paris' AND spa = 1 AND bar = 1 AND pool = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Searching for lodgings in Vienna, so: country = 'AT' AND city = 'Vienna'. With gym facilities, so: fitness\\_center = 1. Needs remote work connectivity, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'AT' AND city = 'Vienna' AND fitness\\_center = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a relaxing getaway in Antalya, so: country = 'TR' AND city = 'Antalya'. Offers wellness, so: spa = 1. Offers leisure activities like golf, so: golf = 1. Guarantees a peaceful night's sleep with enhanced room comfort for the hotter summer days, so: aircondition = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TR' AND city = 'Antalya' AND spa = 1 AND golf = 1 AND aircondition = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Leicester, so: city = 'Leicester'. Needs free Wi-Fi, so: wifi = 'free'. Needs a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Leicester' AND wifi = 'free' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for accommodation in Budapest, so: country = 'HU' AND city = 'Budapest'. With a fitness center, so: fitness\\_center = 1. Pets are allowed, so: pet\\_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND fitness\\_center = 1 AND pet\\_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a haven in Krakow, so: country = 'PL' AND city = 'Krakow'. Provides a sanctuary of relaxation, so: spa = 1. Pampers with culinary delights in its own restaurant, so: restaurant = 1. Ensures the buzz of digital connectivity without a hitch, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'PL' AND city = 'Krakow' AND spa = 1 AND restaurant = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Zurich, so: country = 'CH' AND city = 'Zurich'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'CH' AND city = 'Zurich' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Istanbul, so: country = 'TR' AND city = 'Istanbul'. Needs to offer laundry facilities, so: washing_and_drier = 1. Needs airport shuttle service, so: airport_shuttle IN ('free', 'possible'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TR' AND city = 'Istanbul' AND washing_and_drier = 1 AND airport_shuttle IN ('free', 'possible');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In need of a retreat to Amsterdam, so: country = 'NL' AND city = 'Amsterdam'. With facilities for unwinding like a sauna, so: spa = 1 AND sauna = 1. Secure parking for rental car, so: parking = 'free' OR parking = 'surcharge' AND parking IS NOT NULL. Likes green surroundings, so: description LIKE '%green%'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'NL' AND city = 'Amsterdam' AND (spa = 1 AND sauna = 1) AND (parking = 'free' OR parking = 'surcharge' AND parking IS NOT NULL) AND description LIKE '%green%';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to be in Lisbon, so: city = 'Lisbon'. They want to dine, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Lisbon' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Madeira, so: country = 'PT' AND city IN ('Madeira', 'Funchal', 'Santa-Cruz', 'Calheta', 'Canico', 'Ribeira-Braza', 'Sao-Vicente', 'Santana', 'Porto-Moniz', 'Calheta-Das-Furnas', 'Santana-Das-Terreiras', 'Sao-Vitor', 'Sao-Roque-Do-Pico', 'Sao-Martinho', 'Sao-Vicente-Do-Castelo', 'Sao-Jorge', 'Sao-Br\u00e1s', 'Sao-Martino', 'Sao-Vicente-Do-Cepo', 'Sao-Vicente-Do-Ponta-Delgada', 'Sao-Vicente-Do-Porto-Santo', 'Sao-Vicente-Do-Machico', 'Sao-Vicente-Do-Madeira', 'Sao-Vicente-Do-Porto-Santo', 'Sao-Vicente-Do-Funchal', 'Sao-Vicente-Do-Calheta', 'Sao-Vicente-Do-Santana', 'Sao-Vicente-Do-Santana-Das-Terreiras', 'Sao-Vicente-Do-Sao-Vicente', 'Sao-Vicente-Do-Sao-Roque-Do-Pico', 'Sao-Vicente-Do-Sao-Martinho', 'Sao-Vicente-Do-Sao-Vicente-Do-Cepo', 'Sao-Vicente-Do-Sao-Vicente-Do-Machico', 'Sao-Vicente-Do-Sao-Vicente-Do-Madeira', 'Sao-Vicente-Do-Porto-Santo', 'Sao-Vicente-Do-Porto-Santo', 'Sao-Vicente-Do-Funchal', 'Sao-Vicente-Do-Calheta', 'Sao-Vicente-Do-Santana', 'Sao-Vicente-Do-Santana-Das-Terreiras', 'Sao-Vicente-Do-Sao-Vicente', 'Sao-Vicente-Do-Sao-Roque-Do-Pico', 'Sao-Vicente-Do-Sao-Martinho', 'Sao-Vicente-Do-Sao-Vicente-Do-Cepo', 'Sao-Vicente-Do-Sao-Vicente-Do-Machico', 'Sao-Vicente-Do-Sao-Vicente-Do-Madeira', 'Sao-Vicente-Do-Porto-Santo', 'Sao-Vicente-Do-Porto-Santo', 'Sao-Vicente-Do-Funchal', 'Sao-Vicente-Do-Calheta', 'Sao-Vicente-Do-Santana', 'Sao-Vicente-Do-Santana-Das-Terreiras', 'Sao-Vicente-Do-Sao-Vicente', 'Sao-Vicente-Do-Sao-Roque-Do-Pico', 'Sao-Vicente-Do-Sao-Martinho', 'Sao-Vicente-Do-Sao-Vicente-Do-Cepo', 'Sao-Vicente-Do-Sao-Vicente-Do-Machico', 'Sao-Vicente-Do-Sao-Vicente-Do-Madeira', 'Sao-Vicente-Do-Porto-Santo', 'Sao-Vicente-Do-Porto-Santo', 'Sao-Vicente-Do-Funchal', 'Sao-Vicente-Do-Calheta', 'Sao-Vicente-Do-Santana', 'Sao-Vicente-Do-Santana-Das-Terreiras', 'Sao-Vicente-Do-S",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Sweden, so: country = 'SE'. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wants a hotel in Porto, so: city = 'Porto'. Serves local port wine at the bar, so: bar = 1 AND description LIKE '%port wine%'. No pets at the hotel, so: pet\\_friendly = 'no pets'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Porto' AND bar = 1 AND description LIKE '%port wine%' AND pet\\_friendly = 'no pets';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a luxurious hotel in Madrid, so: country = 'ES' AND city = 'Madrid'. Needs a spa, so: spa = 1. Needs a gym, so: fitness\\_center = 1. Needs a pool, so: pool = 1. High ratings, so: rating >= 8 AND review\\_count >= 20. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Madrid' AND spa = 1 AND fitness\\_center = 1 AND pool = 1 AND rating >= 8 AND review\\_count >= 20;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to see hotels in Warsaw, so: country = 'PL' AND city = 'Warsaw'. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'PL' AND city = 'Warsaw' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for pet-friendly lodging, so: pet\\_friendly IN ('pets allowed on request', 'pets allowed'). Offers parking space, so: parking IN ('free', 'surcharge'). Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'HU' AND pet\\_friendly IN ('pets allowed on request', 'pets allowed') AND parking IN ('free', 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly stay in Prague, so: country = 'CZ' AND city = 'Prague'. Kids can have fun in the water, so: pool = 1 OR water_park = 1. Bringing a small dog, so: pet\\_friendly = 'pets allowed on request'. A kitchen would be a bonus, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'CZ' AND city = 'Prague' AND (pool = 1 OR water_park = 1) AND pet\\_friendly = 'pets allowed on request' AND kitchen IS NOT NULL;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Krakow, so: country = 'PL' AND city = 'Krakow'. With free WiFi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'PL' AND city = 'Krakow' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a cozy place, so: no specific column matches this. Wants to stay in Gdansk, so: city = 'Gdansk'. Accessible for wheelchairs, so: increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Gdansk' AND (increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a kid-friendly hotel in Prague, so: country = 'CZ' AND city = 'Prague'. Needs to have a playground, so: playground = 1. Needs to have a restaurant, so: restaurant = 1. Would love a place with some green space nearby, so: increased_accessibility = 1 OR unit_wheelchair_accessible = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'CZ' AND city = 'Prague' AND playground = 1 AND restaurant = 1 AND (increased_accessibility = 1 OR unit_wheelchair_accessible = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Show hotels in Poznan, so: country = 'PL' AND city = 'Poznan'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'PL' AND city = 'Poznan' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place to stay in Budapest, so: country = 'HU' AND city = 'Budapest'. Needs a restaurant on-site, so: restaurant = 1. Needs rooms with air conditioning, so: aircondition = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND restaurant = 1 AND aircondition = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to travel to Dubrovnik, so: city = 'Dubrovnik'. Need a kid-friendly hotel, so: kids\\_friendly\\_buffet = 1 AND child\\_pool = 1. Swimming area for little ones, so: pool = 1. Eco-friendly lifestyle, so: ev\\_charging\\_station = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Dubrovnik' AND kids\\_friendly\\_buffet = 1 AND child\\_pool = 1 AND pool = 1 AND ev\\_charging\\_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Prague, so: country = 'CZ' AND city = 'Prague'. Offers free parking, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'CZ' AND city = 'Prague' AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly hotel, so: pet\\_friendly = 'pets allowed on request'. In Krakow, so: city = 'Krakow'. With a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Krakow' AND pet\\_friendly = 'pets allowed on request' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a family-oriented stay in Budapest, so: country = 'HU' AND city = 'Budapest'. Provision for an infant, so: cribs = 1. Fun aquatic area, so: water_park = 1 OR pool = 1. Option to dine in, so: restaurant = 1. Accessibility for a stroller, so: increased_accessibility = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND cribs = 1 AND (water_park = 1 OR pool = 1) AND restaurant = 1 AND increased_accessibility = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Aalborg, so: city = 'Aalborg'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Aalborg' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Bremen, so: country = 'DE' AND city = 'Bremen'. Allows pets, so: pet\\_friendly = 'pets allowed on request'. Has a spot for the car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'DE' AND city = 'Bremen' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a kid-friendly lodging option in Akureyri, so: city = 'Akureyri'. Catering to young families with babies, so: cribs = 1. Pool area for toddlers, so: child_pool = 1. Somewhere close by to grab a meal, so: restaurant = 1. Easy access with a stroller, so: increased\\_accessibility = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Akureyri' AND cribs = 1 AND child_pool = 1 AND restaurant = 1 AND increased\\_accessibility = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. List all hotels in Istanbul, so: country = 'TR' AND city = 'Istanbul'. With a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TR' AND city = 'Istanbul' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Porto, so: city = 'Porto'. Suitable for electric car owners, so: ev\\_charging\\_station = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Porto' AND ev\\_charging\\_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-oriented accommodation in Bangkok, so: country = 'TH' AND city = 'Bangkok'. Needs amenities for infants, so: cribs = 1. Needs options for children to play both in water and on the ground, so: pool = 1 AND playground = 1. Needs meals to be taken care of within the premises, so: restaurant = 1. Ease of navigating a baby stroller, so: wheelchair_accessible = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TH' AND city = 'Bangkok' AND cribs = 1 AND pool = 1 AND playground = 1 AND restaurant = 1 AND wheelchair_accessible = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Hotels in Budapest, so: country = 'HU' AND city = 'Budapest'. Offer free wifi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'HU' AND city = 'Budapest' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Searching for a place to stay in Warsaw, so: country = 'PL' AND city = 'Warsaw'. With a fitness center, so: fitness\\_center = 1. Free parking, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'PL' AND city = 'Warsaw' AND fitness\\_center = 1 AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a getaway in Prague, so: country = 'CZ' AND city = 'Prague'. A couple with a young child, so: cribs = 1. A pet dog, so: pet\\_friendly = 'pets allowed on request'. Nearby green spaces for walks, so: increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1. An on-site restaurant, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'CZ' AND city = 'Prague' AND cribs = 1 AND pet\\_friendly = 'pets allowed on request' AND (increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1) AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Vilnius, so: country = 'LT' AND city = 'Vilnius'. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'LT' AND city = 'Vilnius' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Vilnius, so: city = 'Vilnius'. Pet-friendly, so: pet\\_friendly IN ('pets allowed on request'). Has a restaurant, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Vilnius' AND pet\\_friendly IN ('pets allowed on request') AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly accommodation in Istanbul, so: country = 'TR' AND city = 'Istanbul'. Bringing a toddler, so: cribs = 1. Opportunities for the child to play outside, so: playground = 1 OR pool = 1. Needs meals to be easily accessible, so: restaurant = 1. Having a space for the stroller, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TR' AND city = 'Istanbul' AND cribs = 1 AND (playground = 1 OR pool = 1) AND restaurant = 1 AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. List all hotels in Reykjavik, so: city = 'Reykjavik'. Has a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Reykjavik' AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Krakow, so: country = 'PL' AND city = 'Krakow'. With a fitness center, so: fitness\\_center = 1. Available parking, so: parking IN ('free', 'surcharge'). Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'PL' AND city = 'Krakow' AND fitness\\_center = 1 AND parking IN ('free', 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a child-welcoming stay in Prague, so: country = 'CZ' AND city = 'Prague'. Needs to cater to a baby, so: cribs = 1. Offers aquatic fun for the whole family, so: pool = 1 OR water_park = 1. Needs a dining option, so: restaurant = 1. Accommodates pets, so: pet_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'CZ' AND city = 'Prague' AND cribs = 1 AND pool = 1 OR water_park = 1 AND restaurant = 1 AND pet_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to see hotels in Greece's capital, so: country = 'GR' AND city = 'Athens'. With free Wi-Fi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND city = 'Athens' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to find a hotel in Prague, so: country = 'CZ' AND city = 'Prague'. Electric vehicles, so: ev_charging_station = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'CZ' AND city = 'Prague' AND ev_charging_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly retreat in Hungary, so: country = 'HU'. Needs a comfy spot for a baby to sleep, so: unit\\_wheelchair\\_accessible = 1 OR increased\\_accessibility = 1. Splash zone for kids, so: child\\_pool = 1 OR water\\_park = 1. Place for the dog, so: pet\\_friendly = 'pets allowed'. On-site dining, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'HU' AND (unit\\_wheelchair\\_accessible = 1 OR increased\\_accessibility = 1) AND (child\\_pool = 1 OR water\\_park = 1) AND pet\\_friendly = 'pets allowed' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Dublin, so: country = 'IE' AND city = 'Dublin'. Needs parking, so: parking IS NOT NULL. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IE' AND city = 'Dublin' AND parking IS NOT NULL;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a pet-friendly accommodation in Berlin, so: country = 'DE' AND pet\\_friendly = 'pets allowed on request'. Offers guests a place to park their car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'DE' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want to vacation in Rome, so: country = 'IT' AND city = 'Rome'. Friendly for toddlers, so: kids\\_friendly\\_buffet = 1 OR cribs = 1. Has a spot to cool off, so: pool = 1 OR beach\\_access IN ('private beach', 'beach access') OR water\\_park = 1. Preparing their own meals is an option, so: kitchen = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND (pool = 1 OR beach\\_access IN ('private beach', 'beach access') OR water\\_park = 1) AND kids\\_friendly\\_buffet IN (1, 0) AND cribs IN (1, 0) AND kitchen = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want hotels in Madrid, so: country = 'ES' AND city = 'Madrid'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'ES' AND city = 'Madrid' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. In need of a hotel in London, so: country = 'GB' AND city = 'London'. Accessibility features for a wheelchair, so: increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1. On-site parking, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'GB' AND city = 'London' AND increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1 AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a peaceful retreat in Monaco, so: country = 'MC' AND adults\\_only = 1. Pampers with a spa, so: spa = 1. Surrounded by greenery, so: golf = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MC' AND adults\\_only = 1 AND spa = 1 AND golf = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wanting a hotel in Rome, so: country = 'IT' AND city = 'Rome'. Needs a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Ibiza, so: country = 'ES' AND city = 'Ibiza-Island'. With an ocean view, so: ocean\\_view = 1. Does not want to pay for wifi, so: wifi = 'no'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Ibiza-Island' AND ocean\\_view = 1 AND wifi = 'no';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy getaway in Denmark, so: country = 'DK'. Essential amenities include a place for kids to play, so: playground = 1 OR child_pool = 1. Option to bring the dog, so: pet\\_friendly = 'pets allowed on request'. Kitchen where they can prepare meals, so: kitchen = 1. Option to wash clothes, so: washing\\_and\\_drier = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DK' AND (playground = 1 OR child_pool = 1) AND pet\\_friendly = 'pets allowed on request' AND kitchen = 1 AND washing\\_and\\_drier = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Paris, so: country = 'FR' AND city = 'Paris'. Offers free parking, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city = 'Paris' AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a romantic getaway in Venice, so: country = 'IT' AND city = 'Venice'. Needs a beautiful view of the ocean, so: ocean\\_view = 1. Needs a place for spa relaxation, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Venice' AND ocean\\_view = 1 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a family trip to Athens, so: country = 'GR' AND city = 'Athens'. Kid-friendly, so: kids\\_friendly\\_buffet = 1 OR playground = 1 OR child\\_pool = 1. Accessible for a stroller, so: increased\\_accessibility = 1. Offers rooms where we can cook our own meals, so: kitchen = 1. Close to public transport, so: airport\\_shuttle = 'possible' OR public\\_transport = 'good'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND city = 'Athens' AND (kids\\_friendly\\_buffet = 1 OR playground = 1 OR child\\_pool = 1) AND increased\\_accessibility = 1 AND kitchen = 1 AND (airport\\_shuttle = 'possible' OR public\\_transport = 'good');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Berlin, so: country = 'DE' AND city = 'Berlin'. With a gym, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'DE' AND city = 'Berlin' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Amsterdam, so: city = 'Amsterdam'. Boutique hotel, no specific column for that, but we can assume smaller hotels with fewer rooms, so: review\\_count < 1000. Caters to pet owners, so: pet\\_friendly = 'pets allowed on request'. Has a place for cars, so: parking = 'free' or 'surcharge'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Amsterdam' AND review\\_count < 1000 AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Desires a vacation destination in Scotland, so: country = 'IE' and city is not specified, so we can use the 'Scotland' value from the available cities list. Welcoming to toddler and infant, no specific column for this, but we can assume that increased\\_accessibility = 1 and unit\\_wheelchair\\_accessible = 1 would make the hotel more welcoming. Needs to have a kitchen, so: kitchen = 1. Needs a lovely garden or play area, so: description LIKE '%garden%' OR description LIKE '%play area%'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IE' AND (description LIKE '%garden%' OR description LIKE '%play area%') AND kitchen = 1 AND increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Austria, so: country = 'AT'. Has a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'AT' AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wants to stay in Barcelona, so: country = 'ES' AND city = 'Barcelona'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Needs parking, so: parking = 'free'. Needs good reviews, so: rating >= 8 AND review\\_count >= 20. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'ES' AND city = 'Barcelona' AND pet\\_friendly = 'pets allowed on request' AND parking = 'free' AND rating >= 8 AND review\\_count >= 20;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Dreaming of a Greek island escape, so: country = 'GR' AND city IN ('Mykonos', 'Thera', 'Mykonos-Town', 'Chora'). Requires an apartment with kitchen facilities, so: kitchen = 1. Needs to be close to the beach, so: beach\\_access IN ('private beach', 'beach access'). Requires a crib for the baby, so: cribs = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND city IN ('Mykonos', 'Thera', 'Mykonos-Town', 'Chora') AND kitchen = 1 AND beach\\_access IN ('private beach', 'beach access') AND cribs = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Lisbon, so: country = 'PT' AND city = 'Lisbon'. Needs a rating above 8, so: rating > 8. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'PT' AND city = 'Lisbon' AND rating > 8;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy spot in Vienna, so: city = 'Vienna'. Bringing a dog, so: pet\\_friendly = 'pets allowed on request'. Needs to have free wifi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Vienna' AND pet\\_friendly = 'pets allowed on request' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They're a couple from the UK, so: country = 'FR' AND city IS NULL. Looking for a romantic retreat, no specifics given, so we assume no children or pets. Room with a view of the sea, so: ocean\\_view = 1 OR (lat IS NOT NULL AND lat BETWEEN 41.1 AND 46.9 AND lon IS NOT NULL AND lon BETWEEN -2.2 AND 2.2). Onsite dining options, so: restaurant = 1. Leisurely swim, so: pool = 1 OR beach\\_access IN ('private beach', 'beach access'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city IS NULL AND ocean\\_view IN (1, (lat IS NOT NULL AND lat BETWEEN 41.1 AND 46.9 AND lon IS NOT NULL AND lon BETWEEN -2.2 AND 2.2)) AND restaurant = 1 AND (pool = 1 OR beach\\_access IN ('private beach', 'beach access'));",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Paris, so: country = 'FR' AND city = 'Paris'. Allows pets, so: pet\\_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'FR' AND city = 'Paris' AND pet\\_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Italy, so: country = 'IT'. Needs a stellar view, so: no specific column for that, but we can assume it's related to the description. We can use the LIKE operator to search for keywords related to a stellar view, such as \"view\", \"panoramic\", \"scenic\", \"overlooking\", etc. Needs to be wheelchair accessible, so: increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND (description LIKE '%view%' OR description LIKE '%panoramic%' OR description LIKE '%scenic%' OR description LIKE '%overlooking%') AND increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly stay in Spain, so: country = 'ES'. With a pool or near the beach, so: (pool = 1 OR beach_access IN ('private beach', 'beach access')). Needs to be family-friendly, so: kids\\_friendly\\_buffet = 1 OR cribs = 1 OR child\\_pool = 1. Meals for fussy eaters, so: description LIKE '%fussy eaters%'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND (pool = 1 OR beach_access IN ('private beach', 'beach access')) AND (kids\\_friendly\\_buffet = 1 OR cribs = 1 OR child\\_pool = 1) AND description LIKE '%fussy eaters%';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Hotels in Athens, so: country = 'GR' AND city = 'Athens'. Free Wi-Fi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'GR' AND city = 'Athens' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Searching for a hotel in London, so: country = 'GB' AND city = 'London'. Eco-friendly, no specific column for this, but we can assume it's related to increased\\_accessibility, so: increased\\_accessibility = 1. Has electric vehicle charging stations, so: ev\\_charging\\_station = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GB' AND city = 'London' AND increased\\_accessibility = 1 AND ev\\_charging\\_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Taking a family holiday to Germany, so: country = 'DE'. Kid welcoming, so: kids\\_friendly\\_buffet = 1 AND pet\\_friendly = 'pets allowed on request'. Outdoor play area, so: playground = 1 OR has\\_garden = 1. Comfy crib, so: cribs = 1. Parents can grab a drink, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DE' AND kids\\_friendly\\_buffet = 1 AND pet\\_friendly = 'pets allowed on request' AND (playground = 1 OR has\\_garden = 1) AND cribs = 1 AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Venice, so: country = 'IT' AND city = 'Venice'. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Venice' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Istanbul, so: country = 'TR' AND city = 'Istanbul'. With a spa, so: spa = 1. Pets are welcome, so: pet\\_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'TR' AND city = 'Istanbul' AND spa = 1 AND pet\\_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Desires an adventure in Denmark, so: country = 'DK'. Kids can have their own fun, possibly a water park nearby, so: kids\\_friendly\\_buffet = 1 OR water\\_park = 1. Ensuring the accommodation is mindful of the littlest one who still sleeps in a crib, so: cribs = 1. Offering breakfast options to delight the children, so: restaurant = 1 AND (breakfast = 'yes' OR breakfast = 'continental' OR breakfast = 'buffet'). Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DK' AND (kids\\_friendly\\_buffet = 1 OR water\\_park = 1) AND cribs = 1 AND restaurant = 1 AND (breakfast = 'yes' OR breakfast = 'continental' OR breakfast = 'buffet');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Barcelona, so: city = 'Barcelona'. With at least 4 stars, so: stars >= 4. Has a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Barcelona' AND stars >= 4 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in Rome, so: country = 'IT' AND city = 'Rome'. Allows bringing a dog, so: pet\\_friendly = 'pets allowed on request'. Has a restaurant on-site, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'IT' AND city = 'Rome' AND pet\\_friendly = 'pets allowed on request' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Traveling to the French Riviera, so: country = 'FR' AND city IN ('Nice', 'French-Riviera', 'Monaco', 'Cannes', 'Antibes', 'Saint-Tropez'). Want to enjoy spa treatments, so: spa = 1. Want to enjoy ocean gazing from room, so: ocean\\_view = 1. Don't want to worry about parking fees, so: parking = 'no' or parking = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city IN ('Nice', 'French-Riviera', 'Monaco', 'Cannes', 'Antibes', 'Saint-Tropez') AND spa = 1 AND ocean\\_view = 1 AND (parking = 'no' OR parking = 'free');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wants 5-star hotels, so: stars = 5. Wants a pool, so: pool = 1. In Ibiza-Island, so: country = 'ES' and city = 'Ibiza-Island'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Ibiza-Island' AND stars = 5 AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Sicily, so: country = 'IT' AND city IN ('Sicily'). Wants a view of the sea, so: ocean\\_view = 1. Needs to charge an electric car, so: ev\\_charging\\_station = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'IT' AND city IN ('Sicily') AND ocean\\_view = 1 AND ev\\_charging\\_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a romantic retreat in Crete, so: country = 'GR' AND city = 'Crete'. Can have a private dinner under the stars, so: restaurant = 1 AND description LIKE '%private dinner%' AND description LIKE '%stars%'. Indulge in a couples spa session, so: spa = 1 AND description LIKE '%couples%' AND description LIKE '%spa%'. No worries about costs of internet access, so: wifi = 'no'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND city = 'Crete' AND restaurant = 1 AND description LIKE '%private dinner%' AND description LIKE '%stars%' AND spa = 1 AND description LIKE '%couples%' AND description LIKE '%spa%' AND wifi = 'no';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Athens, so: country = 'GR' AND city = 'Athens'. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND city = 'Athens' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wanting a pet-friendly accommodation, so: pet\\_friendly = 'pets allowed on request'. In Nice, so: city = 'Nice'. Needs a spot for the car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Nice' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly stay in Mallorca, so: country = 'ES' AND city IN ('Palma-de-Mallorca', 'Mallorca'). Kids who love swimming and building sandcastles, so: pool = 1 AND beach_access IN ('private beach', 'beach access'). No need to worry about meals, so: restaurant = 0. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city IN ('Palma-de-Mallorca', 'Mallorca') AND pool = 1 AND beach_access IN ('private beach', 'beach access') AND restaurant = 0;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want hotels in Valencia, so: city = 'Valencia'. With free parking, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Valencia' AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Corsica, so: country = 'FR' AND city IN ('Corsica'). Suitable for two adults, no specifications given, so no filtering needed. Quick escape, no specifications given, so no filtering needed. Must have a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city IN ('Corsica') AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Dreaming of a beach holiday in the south of Spain, so: country = 'ES' AND city IN ('Malaga', 'Alicante'). Safe water area for little ones, so: beach\\_access = 'private beach'. Adults-only time, so: adults\\_only = 1. Kitchenette as a bonus, so: kitchenette = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city IN ('Malaga', 'Alicante') AND beach\\_access = 'private beach' AND adults\\_only = 1 AND kitchenette = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Marseille, so: city = 'Marseille'. With a gym, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Marseille' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a stay in Barcelona, so: country = 'ES' AND city = 'Barcelona'. Allows pets, so: pet\\_friendly = 'pets allowed on request'. Enjoys good food, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'ES' AND city = 'Barcelona' AND pet\\_friendly = 'pets allowed on request' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a family vacation to Sicily, so: country = 'IT' AND city IN ('Sicily'). Kid-friendly, so: kids\\_friendly\\_buffet = 1 AND playground = 1. Spaces where toddlers can safely play, so: playground = 1. Offers the convenience of warming up baby food, so: kitchen = 1. A beachfront property, so: beach\\_access = 'beach access'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city IN ('Sicily') AND kids\\_friendly\\_buffet = 1 AND playground = 1 AND kitchen = 1 AND beach\\_access = 'beach access';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Show me hotels in Palma de Mallorca, so: city = 'Palma-de-Mallorca'. Needs to have aircondition, so: aircondition = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Palma-de-Mallorca' AND aircondition = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Mykonos, so: country = 'GR' AND city = 'Mykonos'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Has a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'GR' AND city = 'Mykonos' AND pet\\_friendly = 'pets allowed on request' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Dreaming of a family escapade to Italy, so: country = 'IT'. Welcoming to a furry friend, so: pet\\_friendly = 'pets allowed on request'. Kids can splash around in a kid's pool, so: pool = 1 AND child\\_pool = 1. Can recharge electric car, so: ev\\_charging\\_station = 1. Room with a view to the sea, so: ocean\\_view = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND pet\\_friendly = 'pets allowed on request' AND pool = 1 AND child\\_pool = 1 AND ev\\_charging\\_station = 1 AND ocean\\_view = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Athens, so: country = 'GR' AND city = 'Athens'. Needs parking, so: parking IS NOT NULL. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND city = 'Athens' AND parking IS NOT NULL;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a relaxing stay, no specific requirement. In Scandinavia, so: (country IN ('NO', 'SE', 'DK', 'FI')) OR (city IN ('Stockholm', 'Malmo', 'Copenhagen', 'Helsinki', 'Oslo', 'Gothenburg', 'Trondheim', 'Bergen', 'Stavanger', 'Tromso', 'Aarhus', 'Aalborg', 'Skagen', 'Bornholm', 'Sonderborg', 'Ibiza-Island', 'Palma-de-Mallorca', 'Barcelona', 'Madrid', 'Malaga', 'Canary-Islands', 'Bilbao', 'Tenerife', 'Valencia', 'Algeciras', 'Alicante', 'Rome', 'Milan', 'Genoa', 'Venice', 'Palermo', 'Catania', 'Cagliari', 'Sassari', 'Paris', 'Bordeaux', 'Nice', 'Marseille', 'Corsica', 'French-Riviera', 'Monaco', 'Stockholm', 'Helsingborg', 'Gothenburg', 'Malmo', 'Kiruna', 'Visby', 'Oslo', 'Bergen', 'Trondheim', 'Stavanger', 'Tromso', 'Berlin', 'Munchen', 'Hamborg', 'Bremen', 'Stuttgart', 'Mannheim', 'Dresden', 'Athens', 'Mykonos', 'Thera', 'Thessaloniki', 'Chania', 'Corfu', 'Rhodes', 'Volos', 'London', 'Manchester', 'Edinburgh', 'Glasgow', 'Aberdeen', 'Liverpool', 'Southampton', 'Oxford', 'Cardiff', 'Swansea', 'Wrexham', 'Leicester', 'Belfast', 'Lisburn', 'Northern-Ireland', 'Wales', 'Scotland', 'Istanbul', 'Cappadocia', 'Antalya', 'Bodrum', 'Prague', 'Cesky-Krumlov', 'Carlsbad', 'Pilsen', 'Zurich', 'Basel', 'Geneve', 'Bern', 'Luzern', 'Vienna', 'Salzburg', 'Innsbruck', 'Hallstatt', 'Amsterdam', 'Rotterdam', 'Maastricht', 'Eindhoven', 'Cancun', 'Warsaw', 'Krakow', 'Gdansk', 'Poznan', 'Katowice', 'Lodz', 'Wroclaw', 'Dublin', 'Limerick', 'Cork', 'Reykjavik', 'Akureyri', 'Hafnarfjordur', 'Sydney', 'Melbourne', 'Brisbane', 'Perth', 'Adelaide', 'Gold-Coast', 'Cairns', 'Bangkok', 'Chiang-Mai', 'Phuket', 'Krabi', 'Koh-Samui', 'Ayutthaya', 'Kanchanaburi', 'Tokyo', 'Kyoto', 'Osaka', 'Hiroshima', 'Nagoya', 'Sapporo', 'Yokohama', 'Los-Angeles', 'Miami', 'Boston', 'Mumbai', 'Tulum', 'Mexico-City', 'Guadalajara', 'Playa-del-Carmen', 'Los-Cabos', 'La-Paz', 'San-Miguel-de-Allende', 'Puerto-Vallarta', 'Oaxaca', 'Senglea', 'Cospicua', 'Birgu', 'Porto', 'Madeira', 'Lisbon', 'Budapest', 'Lake-Balaton', 'Eger', 'Pecs', 'Debrecen', 'Szeged', 'Szentendre', 'Vilnius', 'Kaunas', 'Klaipda', 'Trakai', 'Brasilia', 'Rio-de-Janeiro', 'Florianopolis', 'Salvador', 'Sao-Paulo', 'Foz-do",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a seaside escape, so: country IN ('NO', 'DK', 'SE'). With eco-friendly perks, so: ev_charging_station = 1. A crib in the room, so: cribs = 1. Good reviews, so: rating >= 8 AND review_count >= 20. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('NO', 'DK', 'SE') AND ev_charging_station = 1 AND cribs = 1 AND rating >= 8 AND review_count >= 20;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. List all hotels in Athens, so: country = 'GR' AND city = 'Athens'. With a fitness center, so: fitness\\_center = 1. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'GR' AND city = 'Athens' AND fitness\\_center = 1 AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Wanting a hotel in Nice, so: city = 'Nice'. Needs a beautiful sea view, so: ocean\\_view = 1. Pets are welcome, so: pet\\_friendly = 'pets allowed on request'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Nice' AND ocean\\_view = 1 AND pet\\_friendly = 'pets allowed on request';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a sustainable stay, so: increased\\_accessibility = 1. Along the Mediterranean shores, so: country IN ('ES', 'IT', 'GR', 'MT', 'TR', 'CY', 'HR', 'BA', 'ME', 'AL', 'SI', 'Montenegro', 'Malta'). Preferably in a town with rich history, so: city IN ('Rhodes', 'Athens'). Caters to eco-conscious travelers with electric vehicle charging, so: ev\\_charging\\_station = 1. Doesn't compromise on modern comforts like internet access, so: wifi = 'free'. Ensures the little ones have a crib to sleep in, so: cribs = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country IN ('ES', 'IT', 'GR', 'MT', 'TR', 'CY', 'HR', 'BA', 'ME', 'AL', 'Montenegro', 'Malta') AND (city = 'Rhodes' OR city = 'Athens') AND ev\\_charging\\_station = 1 AND wifi = 'free' AND cribs = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Malta, so: country = 'MT'. With a pool, so: pool = 1. Needs to have air conditioning, so: aircondition = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'MT' AND pool = 1 AND aircondition = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place to stay in Sweden, so: country = 'SE'. Offers a luxury experience, so: stars >= 4.5 AND rating >= 9. Including a spa, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND stars >= 4.5 AND rating >= 9 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Searching for a kid-friendly hotel, so: kids\\_friendly\\_buffet = 1 AND cribs = 1 AND child\\_pool = 1. Along the coast of Ibiza, so: country = 'ES' AND city = 'Ibiza-Island'. Offers meals suitable for children, so: kids\\_friendly\\_buffet = 1. Provides the convenience of quick meals in a kitchenette, so: kitchenette = 1. An amazing view of the sea, so: ocean\\_view = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Ibiza-Island' AND kids\\_friendly\\_buffet = 1 AND cribs = 1 AND child\\_pool = 1 AND kitchenette = 1 AND ocean\\_view = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Barcelona, so: country = 'ES' AND city = 'Barcelona'. With a bar, so: bar = 1. With a restaurant, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Barcelona' AND bar = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Sicily, so: country = 'IT' AND city IN ('Sicily'). Needs to be close to the beach, so: beach\\_access IN ('private beach', 'beach access'). Offers dining options at the hotel, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city IN ('Sicily') AND beach\\_access IN ('private beach', 'beach access') AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a family trip to the Greek islands, so: country IN ('GR') AND (city = 'Crete' OR city = 'Rhodes'). Child-friendly, so: kids\\_friendly\\_buffet = 1 AND playground = 1. Supports eco-tourism, so: no specific column, but we can assume that hotels with bike rentals = 1 are eco-friendly. Space for toddler to sleep comfortably, so: no specific column, but we can assume that having a crib = 1 or a rollaway bed = 1 would meet this requirement. Cool spot for kids to play in water, so: pool = 1 OR water\\_park = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND (city = 'Crete' OR city = 'Rhodes') AND (kids\\_friendly\\_buffet = 1 AND playground = 1 AND (bike\\_rentals = 1 OR (crib = 1 AND rollaway\\_bed = 1)) AND (pool = 1 OR water\\_park = 1));",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Copenhagen, so: city = 'Copenhagen'. Allows pets, so: pet\\_friendly IN ('pets allowed on request'). Has cribs for children, so: cribs = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Copenhagen' AND pet\\_friendly IN ('pets allowed on request') AND cribs = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Oslo, so: country = 'NO' AND city = 'Oslo'. With a view of the sea, so: ocean\\_view = 1. Has free parking, so: parking = 'free'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'NO' AND city = 'Oslo' AND ocean\\_view = 1 AND parking = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Going to Stockholm, so: country = 'SE'. Looking for facilities for youngsters to play outside, so: playground = 1. Need amenities for summer heat, so: pool = 1 OR aircondition = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND (playground = 1 OR pool = 1 OR aircondition = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Stockholm, so: country = 'SE' AND city = 'Stockholm'. Adults only, so: adults\\_only = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'SE' AND city = 'Stockholm' AND adults\\_only = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Denmark or Sweden, so: (country IN ('DK', 'SE')). Offer free WiFi, so: wifi = 'free'. On-site bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE (country IN ('DK', 'SE')) AND wifi = 'free' AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a place in Oslo, so: country = 'NO' AND city = 'Oslo'. Needs a place to eat, so: restaurant = 1. Needs a place to keep in shape, so: fitness_center = 1 OR pool = 1. Quiet from children, so: kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND pet\\_friendly = 'no pets'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'NO' AND city = 'Oslo' AND restaurant = 1 AND (fitness_center = 1 OR pool = 1) AND kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND pet\\_friendly = 'no pets';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Copenhagen, so: city = 'Copenhagen'. With a spa, so: spa = 1. With a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Copenhagen' AND spa = 1 AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Oslo, so: country = 'NO' AND city = 'Oslo'. Pet-friendly, so: pet\\_friendly = 'pets allowed on request'. Has a spot for a car, so: parking = 'free' OR parking = 'surcharge'. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'NO' AND city = 'Oslo' AND pet\\_friendly = 'pets allowed on request' AND (parking = 'free' OR parking = 'surcharge');",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Planning a trip to Stockholm, so: country = 'SE' AND city = 'Stockholm'. Needs to be easy to access, so: no specific column matches this requirement. Has options to relax in the hotel itself, so: spa = 1 OR ocean\\_view = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND city = 'Stockholm' AND (spa = 1 OR ocean\\_view = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Stockholm, so: country = 'SE' AND city = 'Stockholm'. With free wifi, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND city = 'Stockholm' AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs to be in Copenhagen, so: city = 'Copenhagen'. Wheelchair friendly, so: increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1. Does not have kids, so: kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Copenhagen' AND increased\\_accessibility = 1 AND unit\\_wheelchair\\_accessible = 1 AND kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a cozy getaway in Bergen, so: city = 'Bergen'. With me and my pet, so: pet\\_friendly = 'pets allowed on request'. Preferably with a scenic view, so: ocean\\_view = 1 OR mountain\\_view = 1. With the possibility of enjoying a drink, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Bergen' AND pet\\_friendly = 'pets allowed on request' AND (ocean\\_view = 1 OR mountain\\_view = 1) AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Aarhus, so: city = 'Aarhus'. With a rating above 7, so: rating > 7. Has a bar, so: bar = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE city = 'Aarhus' AND rating > 7 AND bar = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a luxury stay, so: stars = 5. In Oslo, so: country = 'NO' AND city = 'Oslo'. With a rating above 8, so: rating > 8. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'NO' AND city = 'Oslo' AND stars = 5 AND rating > 8;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They're planning a road trip through Sweden, so: country = 'SE'. They have a family dog, so: pet\\_friendly = 'pets allowed on request'. They're traveling with a Tesla, so: parking = 'surcharge' AND ev\\_charging\\_station = 1. In Stockholm, so: city = 'Stockholm'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'SE' AND city = 'Stockholm' AND pet\\_friendly = 'pets allowed on request' AND parking = 'surcharge' AND ev\\_charging\\_station = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Berlin, so: country = 'DE' AND city = 'Berlin'. With a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'DE' AND city = 'Berlin' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Searching for a place in Paris, so: country = 'FR' AND city = 'Paris'. Offers spa services, so: spa = 1. Has a place to eat on site, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city = 'Paris' AND spa = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a luxurious stay in Rome, so: country = 'IT' AND city = 'Rome'. Leisure-focused, so: adults\\_only = 1 OR kids\\_friendly\\_buffet = 1 OR kids\\_friendly\\_buffet IS NULL. Needs a gym, so: fitness\\_center = 1. Needs fine dining, so: restaurant = 1. Needs options for a relaxing time at the hotel, so: spa = 1 OR pool = 1 OR increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND (adults\\_only = 1 OR kids\\_friendly\\_buffet IS NULL) AND fitness\\_center = 1 AND restaurant = 1 AND (spa = 1 OR pool = 1 OR increased\\_accessibility = 1 OR unit\\_wheelchair\\_accessible = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want hotels in Corfu, so: country = 'GR' AND city = 'Corfu'. With a pool, so: pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND city = 'Corfu' AND pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Needs a hotel in Eindhoven, so: city = 'Eindhoven'. Needs free wifi, so: wifi = 'free'. Needs a place to wind down and relax, so: spa = 1 OR fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Eindhoven' AND (spa = 1 OR fitness\\_center = 1) AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a retreat in Venice, so: country = 'IT' AND city = 'Venice'. Exclusive and luxurious, so: stars >= 4.5. Health and wellness enthusiasts, so: gym = 1 AND spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Venice' AND stars >= 4.5 AND gym = 1 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Madrid, so: country = 'ES' AND city = 'Madrid'. With a gym, so: fitness\\_center = 1. Three stars or less, so: stars <= 3. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'ES' AND city = 'Madrid' AND fitness\\_center = 1 AND stars <= 3;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for accommodations in Paris, so: country = 'FR' AND city = 'Paris'. Wants a pampering experience, so: spa = 1. Needs high-speed internet, so: wifi = 'free'. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city = 'Paris' AND spa = 1 AND wifi = 'free';",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a luxurious sanctuary in Hungary, so: country = 'HU'. Needs a gym suite, so: fitness\\_center = 1. Evening relaxation options, so: bar = 1. No children allowed, so: adults\\_only = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'HU' AND fitness\\_center = 1 AND bar = 1 AND adults\\_only = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a place in London, so: country = 'GB' AND city = 'London'. Needs a spot for a car, so: parking = 'free' OR parking = 'surcharge'. Needs access to a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'GB' AND city = 'London' AND (parking = 'free' OR parking = 'surgarge') AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Peaceful retreat in Austria, so: country = 'AT'. Caters to wellness enthusiasts, so: spa = 1. Space for yoga or similar activities, so: fitness_center = 1 AND (description LIKE '%yoga%' OR description LIKE '%gym%' OR description LIKE '%workout%'). Rejuvenating spa service, so: spa = 1. Convenience of dining options on-site, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'AT' AND spa = 1 AND fitness_center = 1 AND (description LIKE '%yoga%' OR description LIKE '%gym%' OR description LIKE '%workout%') AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a serene stay in the Netherlands, so: country = 'NL'. Needs physical wellness options, so: spa = 1 AND fitness_center = 1. Enjoys relaxation options like massages or sauna, so: spa = 1. Needs fine dining options, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'NL' AND spa = 1 AND fitness_center = 1 AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want hotels in Prague, so: country = 'CZ' AND city = 'Prague'. Offers a spa, so: spa = 1. A place to eat, so: restaurant = 1. Child-friendly, so: kids\\_friendly\\_buffet = 1 OR playground = 1 OR kids\\_friendly = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'CZ' AND city = 'Prague' AND spa = 1 AND restaurant = 1 AND (kids\\_friendly\\_buffet = 1 OR playground = 1 OR kids\\_friendly = 1);",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Seeking a luxurious stay in Rome, so: country = 'IT' AND city = 'Rome'. Amenities for relaxation, so: spa = 1 AND (sauna = 1 OR steam_room = 1). Places for gourmet dining, so: restaurant = 1. Modern gym facilities, so: fitness_center = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND spa = 1 AND (sauna = 1 OR steam_room = 1) AND restaurant = 1 AND fitness_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Porto, so: city = 'Porto'. Needs a gym, so: fitness\\_center = 1. Needs a spa, so: spa = 1. Prefer not listening to kids, so: kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE city = 'Porto' AND fitness\\_center = 1 AND spa = 1 AND kids\\_friendly\\_buffet = 0 AND child\\_pool = 0 AND playground = 0;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Desire a retreat in Barcelona, so: country = 'ES' AND city = 'Barcelona'. Culinary enthusiasts with on-site dining options, so: restaurant = 1. Seeking wellness activities like workouts and spa treatments, so: fitness_center = 1 AND spa = 1. Not too far from the ocean, so: no specific distance requirement in the schema. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Barcelona' AND restaurant = 1 AND fitness_center = 1 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. They want hotels in Rome, so: country = 'IT' AND city = 'Rome'. With gym amenities, so: fitness\\_center = 1. With spa amenities, so: spa = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'IT' AND city = 'Rome' AND fitness\\_center = 1 AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Istanbul, so: country = 'TR' AND city = 'Istanbul'. Idyllic stay, so: no specific SQL column. Modern fitness facilities, so: fitness_center = 1. Serene spa services, so: spa = 1. Picturesque view, no specific SQL column, but we can assume a higher rating is associated with a more scenic view. Most luxurious options, so: rating >= 9. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'TR' AND city = 'Istanbul' AND fitness_center = 1 AND spa = 1 AND rating >= 9;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for hotels in Amsterdam, so: country = 'NL' AND city = 'Amsterdam'. Has a gym, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'NL' AND city = 'Amsterdam' AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in Madrid, so: country = 'ES' AND city = 'Madrid'. With a spa, so: spa = 1. High-speed internet, so: wifi = 'free'. Pool for kids, so: pool = 1 AND child_pool = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'ES' AND city = 'Madrid' AND spa = 1 AND wifi = 'free' AND pool = 1 AND child_pool = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a luxurious retreat in Paris, so: country = 'FR' AND city = 'Paris'. Offers an immersive wellness journey, so: spa = 1 AND fitness_center = 1. Rejuvenating spa treatments, so: description LIKE '%spa%'. A haven for gourmet lovers, so: restaurant = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'FR' AND city = 'Paris' AND spa = 1 AND fitness_center = 1 AND description LIKE '%spa%' AND restaurant = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a hotel in the capital of Denmark, so: country = 'DK' AND city = 'Copenhagen'. Needs to be handicap accessible, so: increased\\_accessibility = 1. Needs a place to eat, so: restaurant = 1. Needs a place to workout, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT \\* FROM hotels WHERE country = 'DK' AND city = 'Copenhagen' AND increased\\_accessibility = 1 AND restaurant = 1 AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Desire a luxury stay, so: stars = 5. In the capital of Austria, so: country = 'AT' AND city = 'Vienna'. Equipped with a fitness suite, so: fitness_center = 1. Haven for relaxation and wellness, so: spa = 1. Exquisite culinary experience, so: restaurant = 1. Needs to have excellent reviews, so: rating >= 9 AND review_count >= 50. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'AT' AND city = 'Vienna' AND stars = 5 AND fitness_center = 1 AND spa = 1 AND restaurant = 1 AND rating >= 9 AND review_count >= 50;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Heading to Corfu, so: country = 'GR' AND city = 'Corfu'. Looking for an intimate stay, no specific column matches this, but we can assume a lower capacity hotel or a smaller number of rooms. Refreshingly cool, no specific column matches this, but we can assume a lower temperature location or a hotel with air conditioning. A place with a view to die for, so: ocean\\_view = 1 OR view\\_column\\_name = 'amazing\\_view' (assuming a column name 'view' is not present in the schema). Chance to unwind with a massage, so: spa = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'GR' AND city = 'Corfu' AND (ocean\\_view = 1 OR view\\_column\\_name = 'amazing\\_view') AND spa = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a luxurious stay, so: stars >= 4. In Rome, so: country = 'IT' AND city = 'Rome'. With a view of the ocean, so: ocean\\_view = 1. Including a spa, so: spa = 1. Including a fitness center, so: fitness\\_center = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'IT' AND city = 'Rome' AND stars >= 4 AND ocean\\_view = 1 AND spa = 1 AND fitness\\_center = 1;",
    "We divide the question into sub elements, and match them to known SQL columns or functions. Looking for a family-friendly hotel in Copenhagen, so: country = 'DK' AND city = 'Copenhagen'. Easy on the wallet, so: stars <= 3. Needs to have amenities for kids, so: pool = 1 AND playground = 1. Therefore, the SQL statement answer is: SELECT * FROM hotels WHERE country = 'DK' AND city = 'Copenhagen' AND stars <= 3 AND pool = 1 AND playground = 1;"
]